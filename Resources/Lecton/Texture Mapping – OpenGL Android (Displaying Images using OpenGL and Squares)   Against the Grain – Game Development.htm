<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0102)http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/ -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares) | Against the Grain – Game Development</title>
<link rel="shortcut icon" href="http://obviam.net/wp-content/themes/clean-simple-white/favicon_helmet.ico">
<link href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/style.css" rel="stylesheet" type="text/css" media="screen">
				
	<!-- Google Analytics for WordPress by Yoast v4.0 | http://yoast.com/wordpress/google-analytics/ -->
	<script type="text/javascript" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/woopra.js" async=""></script><script type="text/javascript" async="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/page.js"></script><script type="text/javascript" async="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ga.js"></script><script type="text/javascript">//<![CDATA[
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount','UA-17403436-1']);
	_gaq.push(['_setCustomVar',1,'tags','2d android-2 graphics-2 opengl-2'],['_setCustomVar',2,'categories','2d android graphics opengl'],['_trackPageview']);
	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
	//]]></script>
	<!-- End of Google Analytics for WordPress by Yoast v4.0 -->
<link rel="alternate" type="application/rss+xml" title="Against the Grain - Game Development » Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares) Comments Feed" href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/feed/">
<link rel="stylesheet" id="A2A_SHARE_SAVE-css" href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/addtoany.min.css" type="text/css" media="all">
<script type="text/javascript" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/si_captcha.js"></script>
<script type="text/javascript" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/comment-reply.min.js"></script>
<script type="text/javascript" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/jquery.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://obviam.net/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://obviam.net/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="OpenGL ES Android – Displaying Graphical Elements (Primitives)" href="http://obviam.net/index.php/opengl-es-android-displaying-graphical-elements-primitives/">
<link rel="next" title="Design In-game Entities. Object Composition Strategies. Part 2 – The State Pattern" href="http://obviam.net/index.php/design-in-game-entities-object-composition-strategies-part-2-the-state-pattern/">
<meta name="generator" content="WordPress 3.5">
<link rel="canonical" href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development.htm">
<link rel="shortlink" href="http://obviam.net/?p=709">

<script type="text/javascript"><!--
var a2a_config=a2a_config||{},wpa2a={done:false,html_done:false,script_ready:false,script_load:function(){var a=document.createElement('script'),s=document.getElementsByTagName('script')[0];a.type='text/javascript';a.async=true;a.src='http://static.addtoany.com/menu/page.js';s.parentNode.insertBefore(a,s);wpa2a.script_load=function(){};},script_onready:function(){if(a2a.type=='page'){wpa2a.script_ready=true;if(wpa2a.html_done)wpa2a.init();}},init:function(){for(var i=0,el,target,targets=wpa2a.targets,length=targets.length;i<length;i++){el=document.getElementById('wpa2a_'+(i+1));target=targets[i];a2a_config.linkname=target.title;a2a_config.linkurl=target.url;if(el)a2a.init('page',{target:el});wpa2a.done=true;}}};a2a_config.tracking_callback=['ready',wpa2a.script_onready];
//--></script>
<!--[if IE]>
<style type="text/css">
.addtoany_list a img{filter:alpha(opacity=70)}
.addtoany_list a:hover img,.addtoany_list a.addtoany_share_save img{filter:alpha(opacity=100)}
</style>
<![endif]-->
<style type="text/css">.a2a_menu, .a2a_menu * { -moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;float:none;margin:0;padding:0;height:auto;width:auto;}.a2a_menu { border-radius: 6px;display:none;direction:ltr;background:#FFF;font: 14px Arial,Helvetica,sans-serif;color:#000;line-height:12px;border: 1px solid #CCC;vertical-align:baseline;overflow:hidden;}.a2a_mini {min-width:200px;position:absolute;width: 300px;z-index:9999997;}.a2a_overlay {display: none;background: #CCC; _height: expression( ((e=document.documentElement.clientHeight)?e:document.body.clientHeight)+"px" ); _width: expression( ((e=document.documentElement.clientWidth)?e:document.body.clientWidth)+"px" ); filter: alpha(opacity=50); opacity: .7;position: fixed;_position: absolute; top: 0;right: 0;left: 0;bottom: 0;z-index: 9999998;-webkit-animation: a2aFadeInOverlay .14s ease-out;animation: a2aFadeInOverlay .14s ease-out;}.a2a_full {background: #FFF;height: auto;height: calc(320px);top: 15%;_top: expression(40+((e=document.documentElement.scrollTop)?e:document.body.scrollTop)+"px"); left: 50%;margin-left: -320px; position: fixed;_position: absolute; text-align: center;width: 640px;z-index: 9999999; -webkit-animation: a2aFadeIn .14s ease-in;    animation: a2aFadeIn .14s ease-in;}.a2a_full_header,.a2a_full_services,.a2a_full_footer {border: 0;margin: 0;padding: 12px;box-sizing: border-box;}.a2a_full_header {padding-bottom: 8px;}.a2a_full_services {height: 280px; overflow-y: scroll;padding: 0 12px;-webkit-overflow-scrolling: touch;}.a2a_full_services .a2a_i {display: inline-block;float: none;width: 181px;width: calc(33.334% - 18px);}div.a2a_full_footer {font-size: 9px;text-align: center;padding: 6px 12px;}div.a2a_full_footer a,div.a2a_full_footer a:visited {display: inline;font-size: 9px;padding: 6px 12px; }div.a2a_full_footer a:hover {background: none;border: 0;color: #0166FF;}div.a2a_full_footer a span.a2a_i_a2a_sm {display: inline-block;padding-left: 14px;vertical-align: bottom;}@-webkit-keyframes a2aFadeIn {from { opacity: 0; }  to { opacity: 1; }}@keyframes a2aFadeIn {from { opacity: 0; }  to { opacity: 1; }}@-webkit-keyframes a2aFadeInOverlay {from { opacity: 0; }  to { opacity: .7; }}@keyframes a2aFadeInOverlay {from { opacity: 0; }  to { opacity: .7; }}@media (max-width: 639px) {.a2a_full {top: 15%;left: 0;margin-left: auto;width: 100%;}}@media (min-width: 318px) and (max-width: 437px) {.a2a_full .a2a_full_services .a2a_i {width: calc(50% - 18px);}}@media (max-width: 317px) {.a2a_full .a2a_full_services .a2a_i {width: calc(100% - 18px);}}@media (max-height: 436px) {.a2a_full {bottom: 40px;height: auto;top: 40px;}}.a2a_menu a{color:#0166FF;text-decoration:none;font:14px Arial,Helvetica,sans-serif;line-height:14px;height:auto;width:auto;outline:none;-moz-outline:none;}.a2a_menu a:visited{color:#0166FF}.a2a_menu a:hover,.a2a_menu a:active,.a2a_menu a.a2a_i:focus,.a2a_tabs div:hover{color:#2A2A2A;border:1px solid #EEE;background-color:#EEE;text-decoration:none}.a2a_menu span,.a2a_img{background:url(http://static.addtoany.com/menu/icons.28.png) no-repeat;border:0;display:block;line-height:16px}.a2a_menu span.a2a_i_find { height:16px;left: 8px;position:absolute;top: 7px;width:16px;}.a2a_menu span.a2a_i_find svg {background-color: #FFF;}.a2a_menu span.a2a_i_find svg path {fill: #CCC;}#a2a_menu_container{display:inline-block} #a2a_menu_container{_display:inline} .a2a_menu_title_container {padding: 6px 8px;}.a2a_menu_find_container {border: 1px solid #CCC;border-radius: 6px;padding: 2px 24px 2px 0;position: relative;text-align: left;}.a2a_cols_container{border-bottom-right-radius:8px;border-top-right-radius:8px}.a2a_cols_container .a2a_col1{overflow-x:hidden;overflow-y:auto;-webkit-overflow-scrolling:touch}.a2a_menu input, .a2a_menu input[type="text"]{display:block;background-image:none;box-shadow:none;line-height:100%;margin:0;overflow:hidden;padding:0;-moz-box-shadow:none;-webkit-box-shadow:none;-webkit-appearance:none} .a2a_menu_title_container input.a2a_menu_title {background-color: #FFF;border: 0;color: #2A2A2A;font: inherit;margin: 0;padding: 0;width: 99%;}.a2a_menu_find_container input.a2a_menu_find {background-color: transparent;_background-color: #FFF;border: 0;color: #2A2A2A;font-size: 16px;height: 20px;line-height: 20px;left: 28px;outline: 0;padding: 2px 0;position: relative;width: 99%;}.a2a_clear{clear:both} .a2a_img, .a2a_svg { display:block; overflow:hidden; }.a2a_img{height:16px;line-height:16px;width:16px;}.a2a_svg{height:32px;line-height:32px;width:32px;}.a2a_default_style a{float:left;line-height:16px;padding:0 2px}.a2a_default_style a:hover .a2a_img,.a2a_default_style a:hover .a2a_svg,.a2a_floating_style a:hover .a2a_img,.a2a_floating_style a:hover .a2a_svg { opacity: .7;}.a2a_default_style .a2a_svg, .a2a_floating_style .a2a_svg { border-radius:14% ;} .a2a_default_style .a2a_img, .a2a_default_style .a2a_dd, .a2a_default_style .a2a_svg{float:left}.a2a_default_style .a2a_img_text{margin-right:4px}.a2a_default_style .a2a_divider{border-left:1px solid #000;display:inline;float:left;height:16px;line-height:16px;margin:0 5px}.a2a_kit a{cursor:pointer}.a2a_floating_style { background-color: #fff; border-radius: 6px; padding: 4px; position: fixed; z-index: 9999995; }.a2a_vertical_style a { display: block; padding: 4px; }.a2a_floating_style.a2a_default_style { bottom: 0; }.a2a_floating_style.a2a_default_style a { padding: 4px; }.a2a_nowrap{white-space:nowrap}.a2a_note{margin:0 auto;padding:9px;font-size:12px;text-align:center}.a2a_note .a2a_note_note{margin:0;color:#2A2A2A}.a2a_wide a{display:block;margin-top:3px;border:1px solid #EEE;padding:3px;text-align:center}.a2a_tabs{float:left;margin:0 0 3px} .a2a_tabs a,.a2a_tabs div{margin:1px;background-color:#EEE; border:1px solid #EEE; font-size:11px; padding:6px 12px ; white-space:nowrap} .a2a_tabs a span, .a2a_tabs div span{display:inline-block;padding-left:20px;height:auto;width:auto} .a2a_tabs_default a span, .a2a_tabs_default div span{height:auto;max-width:99px;overflow:hidden;padding-left:20px;width:auto;_width:expression(this.clientWidth > 99? "97px" : "auto");}.a2a_tabs a, .a2a_tabs a:visited, .a2a_tabs a:hover, .a2a_tabs div, .a2a_tabs div:hover{cursor:pointer;border-bottom:1px solid #EEE;color:#2A2A2A;border-bottom-left-radius:0;-webkit-border-bottom-left-radius:0;-moz-border-radius-bottomleft:0;border-bottom-right-radius:0;-webkit-border-bottom-right-radius:0;-moz-border-radius-bottomright:0}a.a2a_tab_selected, a.a2a_tab_selected:visited,a.a2a_tab_selected:hover,a.a2a_tab_selected:active,a.a2a_tab_selected:focus, div.a2a_tab_selected,div.a2a_tab_selected:hover{color:#0166FF;background-color:#FFF;border:1px solid #CCC;border-bottom:1px solid #FFF}a.a2a_i,i.a2a_i{display:block;float:left;border:1px solid #FFF;padding:6px 8px;text-align:left;white-space:nowrap;width:132px;}a.a2a_i span, a.a2a_more span {overflow: hidden;padding: 0 0 0 21px;text-overflow: ellipsis;}a.a2a_sss:hover {border-left: 1px solid #CCC;}a.a2a_menu_show_more_less{border-bottom:1px solid #FFF;border-left:0;border-right:0;margin:6px 0 0;padding:6px}a.a2a_menu_show_more_less span{display:inline-block;height:16px;margin:0 auto;vertical-align:bottom;} iframe.a2a_shim {background-color: transparent;border: 0;bottom: 0;filter: alpha(opacity=0); height: 100%;left: 0;right: 0;top: 0;position: absolute;width: 100%;z-index: 9999996;_height: expression( ((e=document.documentElement.clientHeight)?e:document.body.clientHeight)+"px" ); _width: expression( ((e=document.documentElement.clientWidth)?e:document.body.clientWidth)+"px" ); }.a2a_dd img {border:0;-ms-touch-action:manipulation;}iframe[id^="PIN_"][id$="_nag"] {display: none !important;}.a2a_i_a2a{background-position:0 0!important}.a2a_i_a2a_sm{background-position:0 -17px!important}.a2a_i_agregator{background-position:0 -34px!important}.a2a_i_aim{background-position:0 -51px!important}.a2a_i_allvoices{background-position:0 -68px!important}.a2a_i_amazon{background-position:0 -85px!important}.a2a_i_aol{background-position:0 -102px!important}.a2a_i_app_net{background-position:0 -119px!important}.a2a_i_arto{background-position:0 -136px!important}.a2a_i_baidu{background-position:0 -153px!important}.a2a_i_bebo{background-position:0 -170px!important}.a2a_i_bibsonomy{background-position:0 -187px!important}.a2a_i_bitty{background-position:0 -204px!important}.a2a_i_blinklist{background-position:0 -221px!important}.a2a_i_blogger{background-position:0 -238px!important}.a2a_i_bloglines{background-position:0 -255px!important}.a2a_i_blogmarks{background-position:0 -272px!important}.a2a_i_bloomberg_current{background-position:0 -289px!important}.a2a_i_bookmark{background-position:0 -306px!important}.a2a_i_bookmarks_fr{background-position:0 -323px!important}.a2a_i_box{background-position:0 -340px!important}.a2a_i_buddymarks{background-position:0 -357px!important}.a2a_i_buffer{background-position:0 -374px!important}.a2a_i_care2{background-position:0 -391px!important}.a2a_i_chrome{background-position:0 -408px!important}.a2a_i_citeulike{background-position:0 -425px!important}.a2a_i_dailyrotation{background-position:0 -442px!important}.a2a_i_default{background-position:0 -459px!important}.a2a_i_delicious{background-position:0 -476px!important}.a2a_i_designfloat{background-position:0 -493px!important}.a2a_i_diaspora{background-position:0 -510px!important}.a2a_i_digg{background-position:0 -527px!important}.a2a_i_diigo{background-position:0 -544px!important}.a2a_i_dzone{background-position:0 -561px!important}.a2a_i_email{background-position:0 -578px!important}.a2a_i_evernote{background-position:0 -595px!important}.a2a_i_facebook{background-position:0 -612px!important}.a2a_i_fark{background-position:0 -629px!important}.a2a_i_feed{background-position:0 -646px!important}.a2a_i_feedblitz{background-position:0 -663px!important}.a2a_i_feedbucket{background-position:0 -680px!important}.a2a_i_feedly{background-position:0 -697px!important}.a2a_i_feedmailer{background-position:0 -714px!important}.a2a_i_find{background-position:0 -731px!important}.a2a_i_fireant{background-position:0 -748px!important}.a2a_i_firefox{background-position:0 -765px!important}.a2a_i_flipboard{background-position:0 -782px!important}.a2a_i_folkd{background-position:0 -799px!important}.a2a_i_friendfeed{background-position:0 -816px!important}.a2a_i_funp{background-position:0 -833px!important}.a2a_i_gmail{background-position:0 -850px!important}.a2a_i_google{background-position:0 -867px!important}.a2a_i_google_plus{background-position:0 -884px!important}.a2a_i_hatena{background-position:0 -901px!important}.a2a_i_instapaper{background-position:0 -918px!important}.a2a_i_itunes{background-position:0 -935px!important}.a2a_i_jamespot{background-position:0 -952px!important}.a2a_i_jumptags{background-position:0 -969px!important}.a2a_i_khabbr{background-position:0 -986px!important}.a2a_i_kindle{background-position:0 -1003px!important}.a2a_i_klipfolio{background-position:0 -1020px!important}.a2a_i_line{background-position:0 -1037px!important}.a2a_i_linkagogo{background-position:0 -1054px!important}.a2a_i_linkatopia{background-position:0 -1071px!important}.a2a_i_linkedin{background-position:0 -1088px!important}.a2a_i_livejournal{background-position:0 -1105px!important}.a2a_i_mail_ru{background-position:0 -1122px!important}.a2a_i_mendeley{background-position:0 -1139px!important}.a2a_i_meneame{background-position:0 -1156px!important}.a2a_i_miro{background-position:0 -1173px!important}.a2a_i_mixi{background-position:0 -1190px!important}.a2a_i_my_msn{background-position:0 -1207px!important}.a2a_i_myspace{background-position:0 -1224px!important}.a2a_i_netlog{background-position:0 -1241px!important}.a2a_i_netvibes{background-position:0 -1258px!important}.a2a_i_netvouz{background-position:0 -1275px!important}.a2a_i_newsalloy{background-position:0 -1292px!important}.a2a_i_newsisfree{background-position:0 -1309px!important}.a2a_i_newstrust{background-position:0 -1326px!important}.a2a_i_newsvine{background-position:0 -1343px!important}.a2a_i_nowpublic{background-position:0 -1360px!important}.a2a_i_odnoklassniki{background-position:0 -1377px!important}.a2a_i_oknotizie{background-position:0 -1394px!important}.a2a_i_oldreader{background-position:0 -1411px!important}.a2a_i_orkut{background-position:0 -1428px!important}.a2a_i_outlook{background-position:0 -1445px!important}.a2a_i_outlook_com{background-position:0 -1462px!important}.a2a_i_pdf{background-position:0 -1479px!important}.a2a_i_phonefavs{background-position:0 -1496px!important}.a2a_i_pinboard{background-position:0 -1513px!important}.a2a_i_pinterest{background-position:0 -1530px!important}.a2a_i_plurk{background-position:0 -1547px!important}.a2a_i_pocket{background-position:0 -1564px!important}.a2a_i_podnova{background-position:0 -1581px!important}.a2a_i_print{background-position:0 -1598px!important}.a2a_i_printfriendly{background-position:0 -1615px!important}.a2a_i_protopage{background-position:0 -1632px!important}.a2a_i_pusha{background-position:0 -1649px!important}.a2a_i_rapidfeeds{background-position:0 -1666px!important}.a2a_i_reddit{background-position:0 -1683px!important}.a2a_i_rediff{background-position:0 -1700px!important}.a2a_i_segnalo{background-position:0 -1717px!important}.a2a_i_share{background-position:0 -1734px!important}.a2a_i_sina_weibo{background-position:0 -1751px!important}.a2a_i_sitejot{background-position:0 -1768px!important}.a2a_i_slashdot{background-position:0 -1785px!important}.a2a_i_springpad{background-position:0 -1802px!important}.a2a_i_startaid{background-position:0 -1819px!important}.a2a_i_stumbleupon{background-position:0 -1836px!important}.a2a_i_stumpedia{background-position:0 -1853px!important}.a2a_i_symbaloo{background-position:0 -1870px!important}.a2a_i_technotizie{background-position:0 -1887px!important}.a2a_i_thefreedictionary{background-position:0 -1904px!important}.a2a_i_thefreelibrary{background-position:0 -1921px!important}.a2a_i_tuenti{background-position:0 -1938px!important}.a2a_i_tumblr{background-position:0 -1955px!important}.a2a_i_twiddla{background-position:0 -1972px!important}.a2a_i_twitter{background-position:0 -1989px!important}.a2a_i_typepad{background-position:0 -2006px!important}.a2a_i_viadeo{background-position:0 -2023px!important}.a2a_i_vk{background-position:0 -2040px!important}.a2a_i_wanelo{background-position:0 -2057px!important}.a2a_i_webnews{background-position:0 -2074px!important}.a2a_i_whatsapp{background-position:0 -2091px!important}.a2a_i_winksite{background-position:0 -2108px!important}.a2a_i_wists{background-position:0 -2125px!important}.a2a_i_wordpress{background-position:0 -2142px!important}.a2a_i_xerpi{background-position:0 -2159px!important}.a2a_i_xing{background-position:0 -2176px!important}.a2a_i_y18{background-position:0 -2193px!important}.a2a_i_yahoo{background-position:0 -2210px!important}.a2a_i_yim{background-position:0 -2227px!important}.a2a_i_yoolink{background-position:0 -2244px!important}.a2a_i_youmob{background-position:0 -2261px!important}</style><link rel="stylesheet" type="text/css" href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/shCore.css"><link rel="stylesheet" type="text/css" href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/shThemeDefault.css"></head>
<body>
<div id="wrapper">
<div id="container">
<div id="header" onclick="document.location.assign(&#39;http://obviam.net&#39;);">
	&nbsp;
<!-- 
<h1><a href="http://obviam.net"></a></h1>
<div id="head-desc"></div>
 -->
</div><!-- end header -->

<div id="head-nav">
<ul id="nav">
	<li><a href="http://obviam.net/">Home</a></li>
	<li class="page_item page-item-2"><a href="http://obviam.net/index.php/about/">What is this all about?</a></li>
<li class="page_item page-item-767"><a href="http://obviam.net/index.php/table-of-contents/">Table of Contents</a></li>
<li class="page_item page-item-850"><a href="http://obviam.net/index.php/resources/">Resources</a></li>
</ul>
<div class="clear"></div>
</div><!-- end head-nav -->

<div id="main-content">
<h2><a href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development.htm">Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)</a></h2>
<div class="post-meta">Posted in <a href="http://obviam.net/index.php/category/2d/" title="View all posts in 2D" rel="category tag">2D</a>, <a href="http://obviam.net/index.php/category/android/" title="View all posts in Android" rel="category tag">Android</a>, <a href="http://obviam.net/index.php/category/graphics/" title="View all posts in Graphics" rel="category tag">Graphics</a>, <a href="http://obviam.net/index.php/category/opengl/" title="View all posts in OpenGL" rel="category tag">OpenGL</a> - 26 January 2011 - 62 comments</div>
<p>In the previous two articles (<a href="http://obviam.net/index.php/opengl-es-with-android-switching-from-canvas-to-opengl/">article 1</a> and <a href="http://obviam.net/index.php/opengl-es-android-displaying-graphical-elements-primitives">article 2</a>) I have tried to introduce OpenGL ES on android. Now let’s take it further and build on them. In this article we will create a billboard (which is a square) and we will apply a texture onto it. A texture is nothing more than a bitmap image. When we work in 2D we set the Z coordinate to 0. We’ll cover 3D later. This is very useful to use in 2D games and is the preferred way to display images using OpenGL. It is very fast indeed.<br>
<span id="more-709"></span><br>
In the previous articles we managed to display triangles. How to display a square then? A square is composed of 2 triangles.</p>
<p>The following diagram shows you this:<br>
</p><div id="attachment_711" class="wp-caption alignnone" style="width: 279px"><a href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Square-Triangles.png"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Square-Triangles.png" alt="" title="Square" width="269" height="264" class="size-full wp-image-711"></a><p class="wp-caption-text">Square from Triangles</p></div><p></p>
<p>There is an interesting thing to note here. The square is <strong>ABDC</strong> instead of the usual <strong>ABCD</strong>. Why is that? Because of how OpenGL chains triangles together.<br>
What you see here is a <em><a href="http://en.wikipedia.org/wiki/Triangle_strip" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;en.wikipedia.org&#39;]);">triangle strip</a></em>. A triangle strip is a series of connected triangles, 2 triangles in our case.</p>
<p>OpenGL draws the following triangle strip (which is a square) using the vertices in the following order:<br>
<strong>Triangle 1:</strong> V1 -&gt; V2 -&gt; V3<br>
<strong>Triangle 2:</strong> V3 -&gt; V2 -&gt; V4</p>
<p></p><div id="attachment_715" class="wp-caption alignnone" style="width: 279px"><a href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Square-Triangles-2.png"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Square-Triangles-2.png" alt="" title="Triangle Strip" width="269" height="264" class="size-full wp-image-715"></a><p class="wp-caption-text">Triangle Strip</p></div><br>
It draws the first triangle using the vertices in order, then it takes the last vertex from the previous triangle and uses the last side of the triangle as the basis for the new triangle.<br>
This also has benefits: we eliminate redundant data from the memory.<p></p>
<p>Grab the <a href="http://obviam.net/source_code/obviam.opengl.p02.tgz" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;download&#39;,&#39;obviam.net/source_code/obviam.opengl.p02.tgz&#39;]);">project</a> from the previous article and create a new class called <code>Square</code>.</p>
<p>If you compare the <code>Square</code> class with the <code>Triangle</code> class, you will notice <em>just one</em> difference:</p>
<div id="highlighter_673313" class="syntaxhighlighter  "><div class="bar "><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_673313_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_673313" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">net.obviam.opengl;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.nio.ByteBuffer;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.nio.ByteOrder;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.nio.FloatBuffer;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">import</code> <code class="plain">javax.microedition.khronos.opengles.GL10;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Square {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="plain">FloatBuffer vertexBuffer;&nbsp;&nbsp; </code><code class="comments">// buffer holding the vertices</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">float</code> <code class="plain">vertices[] = {</code></td></tr></tbody></table></div><div class="line alt2 highlighted"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-</code><code class="value">1</code><code class="plain">.0f, -</code><code class="value">1</code><code class="plain">.0f,&nbsp; </code><code class="value">0</code><code class="plain">.0f,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// V1 - bottom left</code></td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-</code><code class="value">1</code><code class="plain">.0f,&nbsp; </code><code class="value">1</code><code class="plain">.0f,&nbsp; </code><code class="value">0</code><code class="plain">.0f,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// V2 - top left</code></td></tr></tbody></table></div><div class="line alt2 highlighted"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="value">1</code><code class="plain">.0f, -</code><code class="value">1</code><code class="plain">.0f,&nbsp; </code><code class="value">0</code><code class="plain">.0f,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// V3 - bottom right</code></td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="value">1</code><code class="plain">.0f,&nbsp; </code><code class="value">1</code><code class="plain">.0f,&nbsp; </code><code class="value">0</code><code class="plain">.0f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// V4 - top right</code></td></tr></tbody></table></div><div class="line alt2 highlighted"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">Square() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// a float has 4 bytes so we allocate for each coordinate 4 bytes</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">ByteBuffer vertexByteBuffer = ByteBuffer.allocateDirect(vertices.length * </code><code class="value">4</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">vertexByteBuffer.order(ByteOrder.nativeOrder());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// allocates the memory from the byte buffer</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">vertexBuffer = vertexByteBuffer.asFloatBuffer();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// fill the vertexBuffer with the vertices</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">vertexBuffer.put(vertices);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// set the cursor position to the beginning of the buffer</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">vertexBuffer.position(</code><code class="value">0</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">/** The draw method for the square with the GL context */</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">draw(GL10 gl) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// set the colour for the square</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glColor4f(</code><code class="value">0</code><code class="plain">.0f, </code><code class="value">1</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.5f);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Point to our vertex buffer</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glVertexPointer(</code><code class="value">3</code><code class="plain">, GL10.GL_FLOAT, </code><code class="value">0</code><code class="plain">, vertexBuffer);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Draw the vertices as triangle strip</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, </code><code class="value">0</code><code class="plain">, vertices.length / </code><code class="value">3</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">//Disable the client state before leaving</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>The difference is in the highlighted lines (13-18). That’s right, we’ve added one more vertex to the <code>vertices</code> array.<br>
Now change the <code>GlRenderer</code> so instead of a <code>Triangle</code> we use a <code>Square</code>.</p>
<div id="highlighter_541212" class="syntaxhighlighter  "><div class="bar "><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_541212_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_541212" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">net.obviam.opengl;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">javax.microedition.khronos.egl.EGLConfig;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">javax.microedition.khronos.opengles.GL10;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">import</code> <code class="plain">android.opengl.GLU;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">import</code> <code class="plain">android.opengl.GLSurfaceView.Renderer;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">GlRenderer </code><code class="keyword">implements</code> <code class="plain">Renderer {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="plain">Square&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; square;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// the square</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">/** Constructor to set the handed over context */</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">GlRenderer() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">this</code><code class="plain">.square&nbsp;&nbsp;&nbsp;&nbsp; = </code><code class="keyword">new</code> <code class="plain">Square();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onDrawFrame(GL10 gl) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// clear Screen and Depth Buffer</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Reset the Modelview Matrix</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glLoadIdentity();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Drawing</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glTranslatef(</code><code class="value">0</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.0f, -</code><code class="value">5</code><code class="plain">.0f);&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// move 5 units INTO the screen</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// is the same as moving the camera 5 units away</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">square.draw(gl);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// Draw the triangle</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onSurfaceChanged(GL10 gl, </code><code class="keyword">int</code> <code class="plain">width, </code><code class="keyword">int</code> <code class="plain">height) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code><code class="plain">(height == </code><code class="value">0</code><code class="plain">) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Prevent A Divide By Zero By</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">height = </code><code class="value">1</code><code class="plain">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Making Height Equal One</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glViewport(</code><code class="value">0</code><code class="plain">, </code><code class="value">0</code><code class="plain">, width, height);&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Reset The Current Viewport</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glMatrixMode(GL10.GL_PROJECTION);&nbsp;&nbsp;&nbsp; </code><code class="comments">//Select The Projection Matrix</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glLoadIdentity();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Reset The Projection Matrix</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">//Calculate The Aspect Ratio Of The Window</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">GLU.gluPerspective(gl, </code><code class="value">45</code><code class="plain">.0f, (</code><code class="keyword">float</code><code class="plain">)width / (</code><code class="keyword">float</code><code class="plain">)height, </code><code class="value">0</code><code class="plain">.1f, </code><code class="value">100</code><code class="plain">.0f);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glMatrixMode(GL10.GL_MODELVIEW);&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Select The Modelview Matrix</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glLoadIdentity();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Reset The Modelview Matrix</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onSurfaceCreated(GL10 gl, EGLConfig config) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>52</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>53</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>Running this will produce the following result:<br>
</p><div id="attachment_722" class="wp-caption alignnone" style="width: 364px"><a href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Screen-shot-2011-01-26-at-01.58.37.png"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Screen-shot-2011-01-26-at-01.58.37.png" alt="" title="Square" width="354" height="514" class="size-full wp-image-722"></a><p class="wp-caption-text">Triangle Strip forming a Square</p></div><p></p>
<p>Examining this, the <code>draw()</code> method in the <code>Square</code> class should make sense now.</p>
<div id="highlighter_512144" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_512144_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_512144" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">draw(GL10 gl) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// set the colour for the square</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glColor4f(</code><code class="value">0</code><code class="plain">.0f, </code><code class="value">1</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.5f);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Point to our vertex buffer</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glVertexPointer(</code><code class="value">3</code><code class="plain">, GL10.GL_FLOAT, </code><code class="value">0</code><code class="plain">, vertexBuffer);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Draw the vertices as triangle strip</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, </code><code class="value">0</code><code class="plain">, vertices.length / </code><code class="value">3</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">//Disable the client state before leaving</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>First we enable OpenGL to use a vertex array for rendering. Our vertex array contains the vertices for our square.<br>
<code>gl.glVertexPointer</code> (line 5) tells the opengl renderer from where to take the vertices and of what type they are.<br>
The first parameter tells how many coordinates are used for a vertex. We use 3 (x,y,z). The second parameter tells that the values are of type <code>float</code>.<br>
The 3rd parameter is the offset between the vertices in the array. It is called the <em>strife</em>. We have a tightly packed array so it is <em>0</em>.<br>
Finally the last parameter tells where the vertices are held. Of course it is our buffer <code> vertexBuffer</code>.</p>
<p><code>gl.glDrawArrays</code> in line 11 tells OpenGL to draw the primitive. What kind of primitive? The one specified in the first parameter: <code>GL10.GL_TRIANGLE_STRIP</code>. It takes the vertices from the previously set vertex buffer and it follows the rules of the triangle strips described earlier.<br>
The second parameter specifies the starting index for the vertices in the array.<br>
The 3rd parameter tells OpenGL, how many vertices to use for the polygon, about to be rendered. Because in the previous statement (<code>gl.glVertexPointer</code>) we specified that 3 coordinates define a vertex, we will provide the length of our vertex array divided by 3. There are 9 elements in the array defining 3 vertices.</p>
<p><code>glDisableClientState(GL10.GL_VERTEX_ARRAY)</code> disables the state of rendering from an array containing the vertices.</p>
<p>Think of <code>glEnableClientState</code> and <code>glDisableClientState</code> as <code>begin ... end</code> statements in a program. We basically enter subroutines in the OpenGL renderer. Once we entered a routine, we set up variables (the vertex buffer, the colour, etc) and we execute other subroutines (draw vertices). After we’re done, we exit the subroutine. We work in isolation inside the renderer.</p>
<p>Make sure you run the application at this stage and understand what is going on.</p>
<h4>Creating the Texture</h4>
<p>Now the fun part. Let’s load up an image and create a texture. A texture IS an image.<br>
To find out how you can load up images in your android app, check out <a href="http://obviam.net/index.php/displaying-graphics-with-android/">this article</a>.</p>
<p>We will be working with the <code>Square</code> class as we want to apply the texture to the square.</p>
<p>We need to load up the image, tell the opengl renderer that we want to use it as a texture, and finally we will tell the renderer where exactly onto our primitive (square) to display it.<br>
Think of it as if you were putting a foil onto a window or a wall. I provide you with a foil containing an image of the size of the window and tell you to cover the window with it, so the top left corner of the foil will be on the top left corner of the window. That is it, let’s get to work.</p>
<p>OpenGL uses the vertices to work out where to put stuff. So we need to create an array for the image. But this time, this will be 2D as a bitmap is like a sheet of paper, a flat plane.<br>
Add the coordinate array for the texture.</p>
<div id="highlighter_315872" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_315872_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_315872" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">private</code> <code class="plain">FloatBuffer textureBuffer;&nbsp; </code><code class="comments">// buffer holding the texture coordinates</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">private</code> <code class="keyword">float</code> <code class="plain">texture[] = {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Mapping coordinates for the vertices</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="value">0</code><code class="plain">.0f, </code><code class="value">1</code><code class="plain">.0f,&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// top left&nbsp;&nbsp;&nbsp;&nbsp; (V2)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="value">0</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.0f,&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// bottom left&nbsp; (V1)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="value">1</code><code class="plain">.0f, </code><code class="value">1</code><code class="plain">.0f,&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// top right&nbsp;&nbsp;&nbsp; (V4)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="value">1</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.0f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// bottom right (V3)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>8</code></td><td class="content"><code class="plain">};</code></td></tr></tbody></table></div></div></div>
<p>We need to create the <code>textureBuffer</code> in a similar way to the <code>vertexBuffer</code>. This happens in the constructor and we’ll just reuse the <code>byteBuffer</code>. Check the new constructor:</p>
<div id="highlighter_796549" class="syntaxhighlighter  "><div class="bar  "><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_796549_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_796549" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">public</code> <code class="plain">Square() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">ByteBuffer byteBuffer = ByteBuffer.allocateDirect(vertices.length * </code><code class="value">4</code><code class="plain">); </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">byteBuffer.order(ByteOrder.nativeOrder());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">vertexBuffer = byteBuffer.asFloatBuffer();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">vertexBuffer.put(vertices);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">vertexBuffer.position(</code><code class="value">0</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">byteBuffer = ByteBuffer.allocateDirect(texture.length * </code><code class="value">4</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">byteBuffer.order(ByteOrder.nativeOrder());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">textureBuffer = byteBuffer.asFloatBuffer();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">textureBuffer.put(texture);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">textureBuffer.position(</code><code class="value">0</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>We will add an important method to the <code>Square</code> class. The <code>loadGLTexture</code> method. This will be called from the renderer when it starts up. It happens in the <code>onSurfaceCreated</code> method. This will load up the image from the disk and bind it to a texture in the OpenGL repository. It will basically assign an internal ID for the processed image and will be used by the OpenGL API to identify it among other textures.</p>
<div id="highlighter_250820" class="syntaxhighlighter  "><div class="bar "><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_250820_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_250820" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="preprocessor">/** The texture pointer */</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="keyword">private</code> <code class="keyword">int</code><code class="plain">[] textures = </code><code class="keyword">new</code> <code class="keyword">int</code><code class="plain">[</code><code class="value">1</code><code class="plain">];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">loadGLTexture(GL10 gl, Context context) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// loading texture</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Bitmap bitmap = BitmapFactory.decodeResource(context.getResources(),</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">R.drawable.android);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// generate one texture pointer</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glGenTextures(</code><code class="value">1</code><code class="plain">, textures, </code><code class="value">0</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// ...and bind it to our array</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[</code><code class="value">0</code><code class="plain">]);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// create nearest filtered texture</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Use Android GLUtils to specify a two-dimensional texture image from our bitmap </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">GLUtils.texImage2D(GL10.GL_TEXTURE_2D, </code><code class="value">0</code><code class="plain">, bitmap, </code><code class="value">0</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Clean up</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">bitmap.recycle();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>We need a texture pointer array. This is where OpenGL will store the names of the textures we will use in our application. Because we have just one image, we will create an array of size 1. </p>
<p>Line <strong>06</strong> loads the <em>android</em> bitmap which was previously copied into the <code>/res/drawable-mdpi</code> directory, so the ID is already generated.<br>
A note about this bitmap. It is encouraged to be square. It helps a lot with scaling. So make sure your bitmaps for textures are squares (6×6, 12×12, 128×128, etc.). If not square, make sure the width and height are powers of 2 (2, 4, 8, 16, 32, …). You can have a bitmap 128×512 and it is perfectly usable and it is optimised.</p>
<p>Line <strong>10</strong> generates the names for the textures. In our case generates one name and stores it in the <code>textures</code> array. Even if it says <em>name</em>, it actually generates an <code>int</code>. A bit confusing, but it is how it is.</p>
<p>Line <strong>12</strong> binds the texture with the newly generated name (texture[0]). What this means is, that anything using textures in this subroutine, will use the bound texture. It practically activates the texture. A bound texture is the active texture. If we would have had multiple textures and multiple squares to use them, we would have had to bind (activate) the appropriate textures for each square just before they were used to activate them.</p>
<p>Lines <strong>15</strong> and <strong>16</strong> set some filters to be used with for texture. We have just told OpenGL what types of filters to use when it needs to shrink or expand the texture to cover the square. We have chosen some basic algorithms on how to scale the image. Don’t have to worry about this now. </p>
<p>In line <strong>19</strong> we use Android’s utilities to specify the 2D texture image for our bitmap. It creates the image (texture) internally in its native format based on our bitmap.</p>
<p>in line <strong>22</strong> we free up the memory. This you should not forget as memory on a device is very limited and images are big.</p>
<p>Now let’s see how the <code>draw()</code> method has been modified.</p>
<div id="highlighter_249770" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_249770_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_249770" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">draw(GL10 gl) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// bind the previously generated texture</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[</code><code class="value">0</code><code class="plain">]);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Point to our buffers</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glEnableClientState(GL10.GL_TEXTURE_COORD_ARRAY);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Set the face rotation</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glFrontFace(GL10.GL_CW);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Point to our vertex buffer</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glVertexPointer(</code><code class="value">3</code><code class="plain">, GL10.GL_FLOAT, </code><code class="value">0</code><code class="plain">, vertexBuffer);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glTexCoordPointer(</code><code class="value">2</code><code class="plain">, GL10.GL_FLOAT, </code><code class="value">0</code><code class="plain">, textureBuffer);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Draw the vertices as triangle strip</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glDrawArrays(GL10.GL_TRIANGLE_STRIP, </code><code class="value">0</code><code class="plain">, vertices.length / </code><code class="value">3</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">//Disable the client state before leaving</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glDisableClientState(GL10.GL_TEXTURE_COORD_ARRAY);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>It’s not a huge modification from the previous article. The additions are documented and do the following:<br>
Line <strong>03</strong> binds (activates) the texture with the name (integer ID) stored in <code>textures[0]</code>.<br>
Line <strong>07</strong> enables the texture mapping in the current OpenGL context.<br>
Line <strong>14</strong> provides the OpenGL context with the texture coordinates.</p>
<p>After drawing the primitive with textures, we switch off the texture mapping along with the primitive rendering.</p>
<h5>Important – UV Mapping</h5>
<p>If you look carefully, the vertex order in the texture mapping coordinates array doesn’t follow the order present in the square’s vertex coordinates array.</p>
<p>There is a very good explanation of texture mapping coordinates here: <a href="http://iphonedevelopment.blogspot.com/2009/05/opengl-es-from-ground-up-part-6_25.html" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;iphonedevelopment.blogspot.com&#39;]);">http://iphonedevelopment.blogspot.com/2009/05/opengl-es-from-ground-up-part-6_25.html</a>.</p>
<p>I will try to explain it quickly though. Examine the following diagram.<br>
</p><div id="attachment_746" class="wp-caption alignnone" style="width: 427px"><a href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/UVMapping.png"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/UVMapping.png" alt="" title="UVMapping" width="417" height="251" class="size-full wp-image-746"></a><p class="wp-caption-text">Square and Texture Coordinates Ordering</p></div><br>
The square is composed of 2 triangles and the vertices are in the following order.<br>
1 – bottom left<br>
2 – bottom right<br>
3 – top left<br>
4 – top right<br>
Notice the counter clockwise path.<br>
The texture coordinates will be in the order: 1 -&gt; 3 -&gt; 2 -&gt; 4<p></p>
<p>Just bear this mapping in mind and rotate it if you start your shape from a different corner. To read up on UV mapping check the <a href="http://en.wikipedia.org/wiki/UV_mapping" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;en.wikipedia.org&#39;]);">wikipedia entry</a> or search the net for it.</p>
<p>For the final part, to make this work, we need to provide the context to our renderer so we can load up the texture at startup.<br>
The <code>onSurfaceCreated</code> method will look like this. </p>
<div id="highlighter_858756" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_858756_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_858756" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onSurfaceCreated(GL10 gl, EGLConfig config) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Load the texture for the square</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">square.loadGLTexture(gl, </code><code class="keyword">this</code><code class="plain">.context);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glEnable(GL10.GL_TEXTURE_2D);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Enable Texture Mapping ( NEW )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glShadeModel(GL10.GL_SMOOTH);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Enable Smooth Shading</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glClearColor(</code><code class="value">0</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.0f, </code><code class="value">0</code><code class="plain">.5f);&nbsp;&nbsp;&nbsp; </code><code class="comments">//Black Background</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glClearDepthf(</code><code class="value">1</code><code class="plain">.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Depth Buffer Setup</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glEnable(GL10.GL_DEPTH_TEST);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//Enables Depth Testing</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glDepthFunc(GL10.GL_LEQUAL);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">//The Type Of Depth Testing To Do</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">//Really Nice Perspective Calculations</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">gl.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT, GL10.GL_NICEST); </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>Line <strong>03</strong> loads the texture. The rest of the lines just configure the renderer with some values. You don’t have to worry about them now. </p>
<p>You will need to provide the application context to the <code>Square</code> object, because the object itself loads the texture and needs to know the path to the bitmap.<br>
Just provide the context to the renderer in the <code>Run</code> activity’s <code>onCreate</code> method (<code>glSurfaceView.setRenderer(new GlRenderer(this));</code>) and it’s done.</p>
<p>Make sure the renderer has the context declared and set via the constructor.<br>
Excerpt from the <code>GlRendered</code> class.</p>
<div id="highlighter_997229" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_997229_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_997229" menu="false" src="http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf"></div><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines no-wrap"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">private</code> <code class="plain">Square&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; square;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// the square</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="keyword">private</code> <code class="plain">Context&nbsp;&nbsp;&nbsp;&nbsp; context;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="preprocessor">/** Constructor to set the handed over context */</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">public</code> <code class="plain">GlRenderer(Context context) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">this</code><code class="plain">.context = context;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// initialise the square</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">this</code><code class="plain">.square = </code><code class="keyword">new</code> <code class="plain">Square();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>If you run the code you should see the square with a nice android laid on top of it.<br>
</p><div id="attachment_749" class="wp-caption alignnone" style="width: 365px"><a href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/android_textre.png"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/android_textre.png" alt="" title="android_textre" width="355" height="514" class="size-full wp-image-749"></a><p class="wp-caption-text">Square with Android Texture</p></div><p></p>
<div class="download">
Download the source code and project <a href="http://obviam.net/source_code/obviam.opengl.p03.tgz" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;download&#39;,&#39;obviam.net/source_code/obviam.opengl.p03.tgz&#39;]);">here (obviam.opengl.p03.tgz).</a>
</div>
<div class="addtoany_share_save_container"><div class="a2a_kit a2a_target addtoany_list" id="wpa2a_1"><!--[if IE]><iframe frameborder="0" allowTransparency="true" class="addtoany_special_service twitter_tweet" src="http://platform.twitter.com/widgets/tweet_button.html?url=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F&amp;counturl=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F&amp;count=horizontal&amp;text=Texture%20Mapping%20%26%238211%3B%20OpenGL%20Android%20%28Displaying%20Images%20using%20OpenGL%20and%20Squares%29" scrolling="no" style="border:none;overflow:hidden;width:130px;height:20px"></iframe><![endif]--><!--[if !IE]><!--><iframe class="addtoany_special_service twitter_tweet" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/tweet_button.htm" scrolling="no" style="border:none;overflow:hidden;width:130px;height:20px"></iframe><!--<![endif]--><!--[if IE]><iframe frameborder="0" allowTransparency="true" class="addtoany_special_service facebook_like" src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F&amp;layout=button_count&amp;show_faces=false&amp;width=75&amp;action=recommend&amp;colorscheme=light&amp;height=20&amp;ref=addtoany" scrolling="no" style="border:none;overflow:hidden;width:90px;height:21px"></iframe><![endif]--><!--[if !IE]><!--><iframe class="addtoany_special_service facebook_like" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/like.htm" scrolling="no" style="border:none;overflow:hidden;width:90px;height:21px"></iframe><!--<![endif]--><!--[if IE]><iframe frameborder="0" allowTransparency="true" class="addtoany_special_service google_plusone" src="https://plusone.google.com/u/0/_/%2B1/fastbutton?url=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F&amp;size=medium&amp;count=true" scrolling="no" style="border:none;overflow:hidden;width:90px;height:20px"></iframe><![endif]--><!--[if !IE]><!--><iframe class="addtoany_special_service google_plusone" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/fastbutton.htm" scrolling="no" style="border:none;overflow:hidden;width:90px;height:20px"></iframe><!--<![endif]--><a class="a2a_button_linkedin" href="http://obviam.net/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;www.addtoany.com&#39;]);" title="LinkedIn" rel="nofollow" target="_blank"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/linkedin.png" width="16" height="16" alt="LinkedIn"></a><a class="a2a_button_reddit" href="http://obviam.net/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;www.addtoany.com&#39;]);" title="Reddit" rel="nofollow" target="_blank"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/reddit.png" width="16" height="16" alt="Reddit"></a><a class="a2a_button_tumblr" href="http://obviam.net/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;www.addtoany.com&#39;]);" title="Tumblr" rel="nofollow" target="_blank"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/tumblr.png" width="16" height="16" alt="Tumblr"></a><a class="a2a_button_digg" href="http://obviam.net/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;www.addtoany.com&#39;]);" title="Digg" rel="nofollow" target="_blank"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/digg.png" width="16" height="16" alt="Digg"></a><a class="a2a_button_technorati_favorites" href="http://obviam.net/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;www.addtoany.com&#39;]);" title="Technorati Favorites" rel="nofollow" target="_blank"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/technorati.png" width="16" height="16" alt="Technorati Favorites"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share_save#url=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F&title=Texture%20Mapping%20%E2%80%93%20OpenGL%20Android%20(Displaying%20Images%20using%20OpenGL%20and%20Squares)&description=" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-article&#39;,&#39;www.addtoany.com&#39;]);"><img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/share_save_171_16.png" width="171" height="16" alt="Share"></a></div>
<script type="text/javascript"><!--
wpa2a.script_load();
//--></script>
</div><div class="post-tag">Tags: <a href="http://obviam.net/index.php/tag/2d/" rel="tag">2D</a>, <a href="http://obviam.net/index.php/tag/android-2/" rel="tag">android</a>, <a href="http://obviam.net/index.php/tag/graphics-2/" rel="tag">graphics</a>, <a href="http://obviam.net/index.php/tag/opengl-2/" rel="tag">opengl</a></div>

<!-- You can start editing here. -->

	<h4 id="comments">62 Responses - <a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#respond">Add Yours+</a></h4>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
		<div class="clear"></div>
	</div>

	<ol class="commentlist">
			<li class="comment even thread-even depth-1" id="comment-11261">
				<div id="div-comment-11261" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/25903f8396b5712160f5735e5ae28d1e" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Art</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-11261">
			July 26, 2013 at 2:27 pm</a>		</div>

		<p>Awesome tutorial!</p>
<p>Unfortunately, when I’m trying to render 200 small objects it works extremely slowly. I have Galaxy Note2<br>
As an example, my old iphone 4 did this job flawlessly fast.<br>
Do we have any hidden setup somewhere?</p>
<p>Thanks.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-2948">
				<div id="div-comment-2948" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/1f2cd1d134360b911b4cec0d058d1a9d" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">AndroidF</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-2948">
			November 18, 2012 at 1:30 am</a>		</div>

		<p>It works fine in android emulator, but it DOESN’T show anythig under ASUS Transformer Pad Infinity TF700 <img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/icon_sad.gif" alt=":(" class="wp-smiley"><br>
Why?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1 parent" id="comment-2464">
				<div id="div-comment-2464" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/e1548cc543303f729a2e58342b8aaf02" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Topher LaFata</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-2464">
			November 3, 2012 at 6:43 pm</a>		</div>

		<p>Cool tutorial.</p>
<p>I just wanted to mention something that had me confused for a second.</p>
<p>In your first tutorial you talk about CCW winding being the default for a front facing polygon.</p>
<p>In this tutorial you define the first triangle strip as CW which would cause the square to be culled if back face culling were enabled.</p>
<p>I tight make more sense to continue with your CCW approach started with the first tutorial and define the square as :</p>
<p>       //CCW winding on first one determines this is front facing<br>
       private float vertices[] = {<br>
               -1.0f, -1.0f,  0.0f,        // V1 – bottom left<br>
                1.0f, -1.0f,  0.0f,        // V3 – bottom right<br>
               -1.0f,  1.0f,  0.0f,        // V2 – top left<br>
                1.0f,  1.0f,  0.0f         // V4 – top right<br>
       };</p>
<p>Thanks for the good work!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-8456">
				<div id="div-comment-8456" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/bebbe8b5c49c4ce5e80ca15f6b189aa9" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Glen</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-8456">
			April 16, 2013 at 2:13 pm</a>		</div>

		<p>Yes I was confused by this too, as the previous tutorial mentions that vertices are defined Counter clockwise for front facing, and clockwise for back facing polygons. </p>
<p>Thank you Topher for confirming that I read it right too.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1825">
				<div id="div-comment-1825" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/6a00dd4dc4c276b1576596d4adca36e2" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Renjith K N</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1825">
			October 10, 2012 at 8:01 am</a>		</div>

		<p>Hi , Thanks for the nice tutorials, Any one please provide some tutorials/Sample codes or even links to tuts for sprite animation using opengl es</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-1204">
				<div id="div-comment-1204" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/14c288deecbd5f41aabfc780f6aaa265" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">BioHazard</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1204">
			July 5, 2012 at 3:58 pm</a>		</div>

		<p>EVRIKA !!!</p>
<p>I was allmost killing myself ! after 3 days of leaving Canvas and learning OpenGL methods to implement game engine.</p>
<p>The web is full of OpenGL tutorials full of trash and many of them unfinished and many of them lead to wrong way for 2D OpenGL game engine implementation methotds. The big wrong point is using G11Ext for making games. AS THEY DONT ROTATE : D</p>
<p>Annd annd then i found this tutorial from other tutorial which i found from youtube game sample video link lol.</p>
<p>Annd just 15 minute ago I discovered the way I can ROTATE, MOVE AND RESIZE shapes with its sprites ! ! ! hahah</p>
<p>So as many of readers are asking after reading this GREAT tutorial how to move and resize and rotate sprites I added some code in the draw method yet I dont know is it correct way for doint this or not but the fact is it wokrs ! <img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/icon_razz.gif" alt=":P" class="wp-smiley"> </p>
<p>	/** The draw method for the square with the GL context */<br>
	public void draw (GL10 gl, int image)<br>
	{<br>
		gl.glPushMatrix(); //&lt;— PUT IN TOP !!!</p>
<p>		gl.glScalef (4f, 2f, 1f); // ADJUST SIZE !!! &lt;—–<br>
		//gl.glRotatef (60, 1f, 1f, 1f); // ROTATE !!!<br>
		//gl.glTranslatef (1f, 1f, 1f); //MOVE !!!</p>
<p>		// bind the previously generated texture<br>
		gl.glBindTexture(GL10.GL_TEXTURE_2D, image);</p>
<p>		// Point to our buffers<br>
		gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);<br>
		gl.glEnableClientState(GL10.GL_TEXTURE_COORD_ARRAY);</p>
<p>		// set the colour for the square<br>
		gl.glColor4f (0.0f, 1.0f, 0.0f, 0.5f);</p>
<p>		// Set the face rotation<br>
		gl.glFrontFace(GL10.GL_CW);		</p>
<p>		// Point to our vertex buffer<br>
		gl.glVertexPointer (3, GL10.GL_FLOAT, 0, shape.buffer);<br>
		gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, texture.buffer);</p>
<p>		// Draw the vertices as triangle strip<br>
		gl.glDrawArrays (GL10.GL_TRIANGLE_STRIP, 0, shape.vertex.length / 3);</p>
<p>		// Disable the client state before leaving<br>
		gl.glDisableClientState (GL10.GL_VERTEX_ARRAY);<br>
		gl.glDisableClientState(GL10.GL_TEXTURE_COORD_ARRAY);</p>
<p>		gl.glPopMatrix(); // PUT IN BOTTOM !!!<br>
	}</p>
<p>discovering this functions helped me tutorial <a href="http://www.morrowland.com/apron/tutorials/gl/gl_matrix.php" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-comment&#39;,&#39;www.morrowland.com&#39;]);" rel="nofollow">http://www.morrowland.com/apron/tutorials/gl/gl_matrix.php</a></p>
<p>So many thanks to this blog for pointing me out the only true way…</p>
<p>+1 android simpliest 2d opengl game engine in 1 week…</p>
<p> <img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/icon_razz.gif" alt=":P" class="wp-smiley"> </p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1195">
				<div id="div-comment-1195" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/2e9e3032cfb4a2490340ea5bf90feac1" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">ugur</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1195">
			June 28, 2012 at 12:48 pm</a>		</div>

		<p>First of all thank you for this great tutorial. </p>
<p>I have a question if you can help me. I did this tutorial without any problems. But i want to do that:</p>
<p>The square has to be full screen on device so the texture too.</p>
<p>How can i do that?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-1189">
				<div id="div-comment-1189" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/a4bbce19ea91ac93a7fdb9a25b4ad0a4" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">redalin</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1189">
			June 22, 2012 at 10:59 am</a>		</div>

		<p>Great tutorial, but i have a little problem. I neet to use OpenGL on  a single FrameLayout and not on the whole screen. How could i use this tutorial to load a texture into that framelayout?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1188">
				<div id="div-comment-1188" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/a4bbce19ea91ac93a7fdb9a25b4ad0a4" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">redalin</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1188">
			June 22, 2012 at 10:54 am</a>		</div>

		<p>Hi, great tutorial, but i have a little problem. I neet to use OpenGL on  a single FrameLayout and not on the whole screen. How could i use this tutorial to load a texture into that framelayout?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-1062">
				<div id="div-comment-1062" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/f2de47ed0c817a0984408d5a3663ecdf" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1062">
			May 11, 2012 at 7:07 am</a>		</div>

		<p>Do you have an example that uses more than one surface with different textures? I am seeing a similar thing to what Prasad had way back when, it’s difficult to find tutorials for that next step in texture mapping. So eg draw a square somewhere with a texture, and a circle somewhere else with smooth surface only.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1061">
				<div id="div-comment-1061" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/1ff107fee74279b41214acecb00f787f" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Dill</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1061">
			May 11, 2012 at 5:32 am</a>		</div>

		<p>Great tutorials..</p>
<p>Fix for the white square,</p>
<p>add:</p>
<p>  gl.glEnable(GL10.GL_TEXTURE_2D);</p>
<p>to the Square.draw() method..</p>
<p>works flawlessly…</p>
<p>Cheers.. and keep’em coming…</p>
<p>Dill</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-1060">
				<div id="div-comment-1060" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/47c688915a21f60d087d4b9445b873c0" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Joseph T</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1060">
			May 10, 2012 at 5:50 pm</a>		</div>

		<p>Great Tutorial, but on the Droid 2 a Power of 2 image seems to be required. (2^X x 2^Y where x and y may be equal.)</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1059">
				<div id="div-comment-1059" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/47c688915a21f60d087d4b9445b873c0" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">jtantillo</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1059">
			May 10, 2012 at 5:48 pm</a>		</div>

		<p>Great Tutorial, but I wasn’t able to get it work until I used a PoT (Power of Two) image on the Motorola Droid 2.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-849">
				<div id="div-comment-849" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/f92ccb715be1f68ae50bf86cd034f235" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://gotoanduse.me/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;gotoAndUse.me&#39;]);" rel="external nofollow" class="url">Erik</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-849">
			February 18, 2012 at 8:56 am</a>		</div>

		<p>I am new to JAVA and android, and i have been fumbling all around the internet looking for a good OpenGL tutorial only to be disenchanted everywhere i looked, until now..  GREAT F’N set of tutorials.. very well explained.. Feels easy now.. You ROCK!</p>
<p>oh one question.. i was able to get your android.png laoded when i changed the method:</p>
<p>InputStream is = mContext.getResources().openRawResource(R.drawable.android);</p>
<p>bitmap = BitmapFactory.decodeStream(is);</p>
<p>before that i was getting the white square problem but then when i switch to a different png in the same drawable folder, i get the white square again..  any ideas?</p>
<p>thanks <img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-782">
				<div id="div-comment-782" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/9f02439fd8f6fc66762f4d4666e638ee" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://backroomwebdesign.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;backroomwebdesign.com&#39;]);" rel="external nofollow" class="url">joe GL</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-782">
			January 23, 2012 at 7:22 pm</a>		</div>

		<p>Are you sure your square and texture coordinates ordering is correct?</p>
<p>private float vertices[] = { //makes a Z shape in your pic<br>
            -1.0f, -1.0f,  0.0f,        // V1 – bottom left<br>
            -1.0f,  1.0f,  0.0f,        // V2 – top left<br>
             1.0f, -1.0f,  0.0f,        // V3 – bottom right<br>
             1.0f,  1.0f,  0.0f         // V4 – top right<br>
    };<br>
//the above points make an N shape</p>
<p>private float texture[] = { //makes an N shape in your pic<br>
3<br>
        // Mapping coordinates for the vertices<br>
        0.0f, 1.0f,     // top left     (V2)<br>
        0.0f, 0.0f,     // bottom left  (V1)<br>
        1.0f, 1.0f,     // top right    (V4)<br>
        1.0f, 0.0f      // bottom right (V3)<br>
};<br>
//the above points make a backwards N shape</p>
<p>I mention this because Im having a devil of a time aligning the texture.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-759">
				<div id="div-comment-759" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/691496cdd8d59b1b117adc1805f41603" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">James</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-759">
			January 3, 2012 at 4:45 pm</a>		</div>

		<p>This tutorial is great.<br>
I have one thing to add.  I was getting the white square only problem and none of the above suggestions worked for me.  After much investigation I found an alternate syntax of loading the bitmap that fixed the problem for me:</p>
<p>InputStream is = mContext.getResources().openRawResource(R.drawable.android);</p>
<p>bitmap = BitmapFactory.decodeStream(is);</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2 parent" id="comment-776">
				<div id="div-comment-776" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/e6b183e6652e2b442163d05392ab75b6" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Santiago</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-776">
			January 20, 2012 at 4:14 pm</a>		</div>

		<p>Would this</p>
<p>InputStream is = mContext.getResources().openRawResource(R.drawable.android);</p>
<p>bitmap = BitmapFactory.decodeStream(is);</p>
<p>count towards the 16mb app limit? I’m trying to store large pictures as bitmaps and hitting RAM limits, but I read that GL textures are outside that limit.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-tamas bypostauthor odd alt depth-3" id="comment-777">
				<div id="div-comment-777" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ad13be881d13f361a39c3ce74e5a8df8" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Impaler</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-777">
			January 20, 2012 at 6:50 pm</a>		</div>

		<p>It depends on the device how much memory you have, but the bitmap object is added to he heap memory first and when you upload it to the GL context it gets into the native memory (the VRAM is shared with the actual RAM on mobile devices).</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-737">
				<div id="div-comment-737" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/2b6969de164c6bdeac42dac40ecb0178" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">carlos</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-737">
			December 14, 2011 at 12:56 am</a>		</div>

		<p>how can I put two squares in different places using different textures and how can I trasformar the squares into rectangles</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-736">
				<div id="div-comment-736" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/2b6969de164c6bdeac42dac40ecb0178" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">carlos</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-736">
			December 14, 2011 at 12:54 am</a>		</div>

		<p>I want to creat an app and i want to use a 800*480 image as a background and 2 retangules with texture, the texture must use trasparencies, like png ou gif, text and sound (mp3 or midi)</p>
<p>can any one tell me how to trasforme the square in to a rectangles and how do I put 2 rectangles with diferente texture in diferente places?<br>
or else how can I put two squares in different places using different textures,</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-691">
				<div id="div-comment-691" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/14fb99b5e1ec41cf12420b473747bf23" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">praveen</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-691">
			November 17, 2011 at 2:54 pm</a>		</div>

		<p>can u tell me the code hoe to read a txt file and plot the graph from it using openGL</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-643">
				<div id="div-comment-643" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/f47fec1d2b2c302b26e483c11e107f33" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Mellowg</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-643">
			October 30, 2011 at 9:13 pm</a>		</div>

		<p>You are awesome.  Very clearly explained.  This was most useful to me.  You are a very good teacher.  I am so grateful.  Thank you.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-635">
				<div id="div-comment-635" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/aae365972ff7d11c6b93ad296efa99cf" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">simplykid</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-635">
			October 26, 2011 at 11:34 pm</a>		</div>

		<p>I followed your articles from the start.<br>
Thanks, they’re great tutorials indeed.</p>
<p>But I wonder, if I’m about to switch the 2D programing from previous lesson, I can see where I can put/replace where render method, though I’m not so sure, but I don’t know where to put the update() method.</p>
<p>If you had already mentioned it in one of these articles, may be i have missed it.<br>
Can you help me telling where put these method, update() and also render() method?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-622">
				<div id="div-comment-622" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/5fd014556b5c8cc408e297a9e6d6e3bd" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">geeta</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-622">
			October 18, 2011 at 6:37 am</a>		</div>

		<p>Hey I have tried to draw a bitmap in texture. I have done same coding. But when i am running it i am getting error ie.</p>
<p>10-18 12:02:31.393: ERROR/AndroidRuntime(879): FATAL EXCEPTION: GLThread 8<br>
10-18 12:02:31.393: ERROR/AndroidRuntime(879): java.lang.NullPointerException<br>
10-18 12:02:31.393: ERROR/AndroidRuntime(879):     at com.example.geeta.Square.loadGLTexture(Square.java:78)<br>
10-18 12:02:31.393: ERROR/AndroidRuntime(879):     at com.example.geeta.GlRenderer.onSurfaceCreated(GlRenderer.java:60)<br>
10-18 12:02:31.393: ERROR/AndroidRuntime(879):     at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1317)<br>
10-18 12:02:31.393: ERROR/AndroidRuntime(879):     at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1116)</p>
<p>can any body please help me…</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-618">
				<div id="div-comment-618" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/1749f8b39697300b839f67e79f8b6102" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://www.facebook.com/gurumoorthy.arumugam" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;www.facebook.com&#39;]);" rel="external nofollow" class="url">GuruMoorthy Arumugam</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-618">
			October 14, 2011 at 6:28 am</a>		</div>

		<p>i have problem in this code its showing null pointer exception. i have downloaded this code and run my eclipse its working fine. i try to add this code are in my live wallpaper.but i have to saw triangle but i can’t able to load image when ever i load my its showing null pointer exception i put all the code for exactly but i don’t know where i’m doing wrong.</p>
<p>i change my image location in to drawable-nodpi but that time also showing null pointer exception.</p>
<p>this is my logcat output</p>
<p>10-14 11:43:43.118: WARN/dalvikvm(3050): threadid=8: thread exiting with uncaught exception (group=0x4001d868)<br>
10-14 11:43:43.118: ERROR/AndroidRuntime(3050): FATAL EXCEPTION: GLThread 9<br>
10-14 11:43:43.118: ERROR/AndroidRuntime(3050): java.lang.NullPointerException<br>
10-14 11:43:43.118: ERROR/AndroidRuntime(3050):     at frankandrobot.glwallpapervideodemo.com.Square.loadGLTexture(Square.java:73)<br>
10-14 11:43:43.118: ERROR/AndroidRuntime(3050):     at frankandrobot.glwallpapervideodemo.com.VideoRenderer.onSurfaceCreated(VideoRenderer.java:77)<br>
10-14 11:43:43.118: ERROR/AndroidRuntime(3050):     at net.rbgrn.android.glwallpaperservice.GLThread.guardedRun(GLWallpaperService.java:664)<br>
10-14 11:43:43.118: ERROR/AndroidRuntime(3050):     at net.rbgrn.android.glwallpaperservice.GLThread.run(GLWallpaperService.java:538)<br>
10-14 11:43:56.398: WARN/Email(1452): Exception detected: Read error: I/O error during system call, Connection reset by peer<br>
10-14 11:43:56.398: WARN/Email(1452): Last network activities:<br>
10-14 11:43:56.398: WARN/Email(1452): * OK Gimap ready for requests from 115.111.177.222 g2if3342858pbc.293<br>
10-14 11:43:56.398: WARN/Email(1452): 1 CAPABILITY<br>
10-14 11:43:56.398: WARN/Email(1452): * CAPABILITY IMAP4rev1 UNSELECT IDLE NAMESPACE QUOTA ID XLIST CHILDREN X-GM-EXT-1 XYZZY SASL-IR AUTH=XOAUTH<br>
10-14 11:43:56.398: WARN/Email(1452): 1 OK Thats all she wrote! g2if3342858pbc.293<br>
10-14 11:43:56.398: WARN/Email(1452): 2 ID (“name” “com.android.email” “os” “android” “os-version” “2.2; FRF91″ “vendor” “nvidia” “x-android-device-model” “INB-10/n” “AGUID” “+TIbwSeLDHum85UXux4T+QJD51g=”)</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="pingback odd alt thread-even depth-1" id="comment-600">
				<div id="div-comment-600" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://tech.vniup.com/index.php/android/opengl-es/drawing-text-as-textures-on-squares-does-not-show-anything.html" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;tech.vniup.com&#39;]);" rel="external nofollow" class="url">Drawing text as textures on squares does not show anything | Technical support, Computer, programming issue, issue tracking, quality assurance</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-600">
			September 16, 2011 at 12:03 pm</a>		</div>

		<p>[...] have tried to map the texture as it is taught here and here with no success. I really don’t know what to do to get some letters drawn on the [...]</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-597">
				<div id="div-comment-597" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/520d1d67f74c56061b221acd84e832a9" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">bibster</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-597">
			September 13, 2011 at 2:05 pm</a>		</div>

		<p>I have the same question as Daniel.<br>
I tried defining a second Square (square2) and drawing it after moving the viewport but all I got was a white square displayed (no sign of square1 or the android?<br>
Great series of articles by the way.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-545">
				<div id="div-comment-545" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/1749f8b39697300b839f67e79f8b6102" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://asgurumoorthy/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;asgurumoorthy&#39;]);" rel="external nofollow" class="url">gurumoorthy</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-545">
			August 26, 2011 at 3:59 am</a>		</div>

		<p>Hi every one any know how to 3dsphere i need some tutorial for that..</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-544">
				<div id="div-comment-544" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/1749f8b39697300b839f67e79f8b6102" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://asgurumoorthy/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;asgurumoorthy&#39;]);" rel="external nofollow" class="url">gurumoorthy</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-544">
			August 26, 2011 at 3:55 am</a>		</div>

		<p>hai every one kindly post some tutorial for how to draw 3dsphere in opengl i have searched many tutorial but i can’t exact one </p>
<p>thank u all…….</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-451">
				<div id="div-comment-451" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/3aa5bf4c95d33b2e1ba79ffbc3f17ebd" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">daniel</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-451">
			July 22, 2011 at 5:48 pm</a>		</div>

		<p>how do I load multiple images?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-450">
				<div id="div-comment-450" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/3aa5bf4c95d33b2e1ba79ffbc3f17ebd" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">daniel</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-450">
			July 22, 2011 at 4:13 am</a>		</div>

		<p>this is very helpful, thank you !! ^^</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-339">
				<div id="div-comment-339" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/d9e5de124f2181f3e08f659cdb877a1e" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Rob</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-339">
			May 6, 2011 at 9:09 am</a>		</div>

		<p>Have you had a look at Honeycomb yet?<br>
There’s a class called SurfaceTexture that allows streaming from a camera feed to a texture.</p>
<p>If you do take a look and get it working let me know.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-327">
				<div id="div-comment-327" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/a062e288b96c6dd66993b6fbeb50e4ec" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">tek911</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-327">
			April 18, 2011 at 9:28 am</a>		</div>

		<p>Thanks for the tutorials. They have made my transition from XNA to android a nice transition. That being said, i have a question in regard to transitioning from canvas to opengl es. In the canvas example, I have a moving images that moves to the users touch and snaps back to original location when done. </p>
<p>In making the jump to opengl i’m not 100% sure how to load an image without mapping it to a primitive (aka billboard) so that i can take advantage of the transparent nature of an png image i have (aka i want to see the background through the portions of the image that are empty). Beginner question im sure but just trying to get a better understanding. Thanks!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-293">
				<div id="div-comment-293" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/5c9fbe3589aa99c5e68f3c82c15bf2c7" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">cloudjubei</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-293">
			March 28, 2011 at 5:14 pm</a>		</div>

		<p>Thanks very much for these tutes.<br>
This was the best thing out of everything there is on the web to understand OpenGl ES for Android. I actually finally know what I’m doing!<br>
Thanks a lot!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-290">
				<div id="div-comment-290" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/632a93521f61418a6fc3388ae8d90086" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://www.mobile-visuals.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;www.mobile-visuals.com&#39;]);" rel="external nofollow" class="url">Eyvind Almqvist</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-290">
			March 26, 2011 at 8:51 am</a>		</div>

		<p>I tried to run this project on a Samsung Galaxy, but only a white rectangle is shown. I have cleaned and rebuild the project. I have created a directory called res\drawable-nodpi like suggested and put the images there, but I still only see a white rectangle. The texture is shown on the emulator, but not on the Samsung Galaxy. What do I have to see the texture on the device?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-287">
				<div id="div-comment-287" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/632a93521f61418a6fc3388ae8d90086" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://www.mobile-visuals.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;www.mobile-visuals.com&#39;]);" rel="external nofollow" class="url">Eyvind Almqvist</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-287">
			March 25, 2011 at 5:19 pm</a>		</div>

		<p>I tried to run this project on a Samsung Galaxy, but only a white rectangle is shown. I have cleaned and rebuilt the project. I have created a directory called res\drawable-nodpi like suggested and put the images there, but I still only see a white rectangle. The texture is shown on the emulator, but not on the Samsung Galaxy. What do I have to see the texture on the device?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-tamas bypostauthor even depth-2 parent" id="comment-288">
				<div id="div-comment-288" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ad13be881d13f361a39c3ce74e5a8df8" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Impaler</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-288">
			March 25, 2011 at 5:33 pm</a>		</div>

		<p>Have you deleted the resource from its original location, mdpi?</p>
<p>As of android 2.2 there is support extra high density screens and extra large screens too.</p>
<p>If deleting the original from mdpi does not work, try putting it into res/drawable-hdpi or res/drawable-xhdpi and give it a go then.</p>
<p>Although moving it to nodpi should fix that problem as it is independent of the screen.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-3" id="comment-303">
				<div id="div-comment-303" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/632a93521f61418a6fc3388ae8d90086" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://www.mobile-visuals.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;www.mobile-visuals.com&#39;]);" rel="external nofollow" class="url">Eyvind Almqvist</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-303">
			March 31, 2011 at 1:49 pm</a>		</div>

		<p>It worked when I deleted the resource from its original location, mdpi. Sorry for the double posting, I thought that my thread would appear at the end of the page, so I didn’t see it first. That is why I posted the same thing 2 times.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-279">
				<div id="div-comment-279" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/256c0a39d1fe0c90879cc7e1ef3a6335" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://www.iiggnnaacciioo.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;www.iiggnnaacciioo.com&#39;]);" rel="external nofollow" class="url">Ignacio</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-279">
			March 19, 2011 at 11:19 pm</a>		</div>

		<p>This is exactly the tutorial I was looking for. Thank you very much!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-274">
				<div id="div-comment-274" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/754b5c5bfc1c306a965cd066f3b4e278" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Oscar</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-274">
			March 15, 2011 at 10:23 pm</a>		</div>

		<p>Great Tutorial!<br>
Just what i was looking for. Keep on writing it.</p>
<p>Thanks!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-213">
				<div id="div-comment-213" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/1a20014b6d34e005dd8ee18010d6e690" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Sylver</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-213">
			March 4, 2011 at 9:41 am</a>		</div>

		<p>Hello, I was wondering… I have read all your tutorials and they are just extraordinary.<br>
I was excited and did a bunch of modifications to make the guy shoot bullets.<br>
But when I saw this, I was worried if after building my game, when I try to switch to OpenGL, it might be extremely different in structure?</p>
<p>Should I stop my game project and wait until I learn all the OpenGL basic to start building up on that? or can I just switch with a few modifications?</p>
<p>Thank you very much! Wonderful tutorial !!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-tamas bypostauthor odd alt depth-2 parent" id="comment-214">
				<div id="div-comment-214" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ad13be881d13f361a39c3ce74e5a8df8" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Impaler</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-214">
			March 4, 2011 at 11:20 am</a>		</div>

		<p>Hi there,</p>
<p>You don’t have to worry about OpenGL when you design your game elements. Ideally the only method that will change is the <code>render</code> method.<br>
If you decouple the update from the graphics, you should be fine. Focus on having a good design and when you are confident with OpenGL, you will switch to it without affecting anything else.</p>
<p>So just carry on experimenting and do not worry.<br>
I</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3" id="comment-216">
				<div id="div-comment-216" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/1a20014b6d34e005dd8ee18010d6e690" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Sylver</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-216">
			March 5, 2011 at 5:02 am</a>		</div>

		<p>Perfect!<br>
Now I can restart my mediocre project hehe <img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-202">
				<div id="div-comment-202" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/8a68c226f1e27aee5cc30a0ddc1b5cb8" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://chipree.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;chipree.com&#39;]);" rel="external nofollow" class="url">Ciprian</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-202">
			February 19, 2011 at 6:31 pm</a>		</div>

		<p>why don’t you use gluOrtho2D instead of gluPerspective ?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-tamas bypostauthor even depth-2" id="comment-203">
				<div id="div-comment-203" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ad13be881d13f361a39c3ce74e5a8df8" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Impaler</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-203">
			February 21, 2011 at 5:23 pm</a>		</div>

		<p>I didn’t know about the gluOrtho2D until now.<br>
I looked it up and indeed it is the way to do it.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-198">
				<div id="div-comment-198" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/e30b3805989a9cbadb892a7becdb0e35" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Ruairi</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-198">
			February 17, 2011 at 10:54 am</a>		</div>

		<p>I’m a beginner to game and Android development. I’ve been creating a little game on both Windows Phone 7 and Android. XNA is so simple and I was afraid to mess around with OpenGL in Android as I though the port would be too difficult. I was using Canvas all along like a fool!!! This has been so helpful. Now the cloud has been lifted I’m beginning to enjoy developing with android and OpenGL more than I did with XNA. Thanks so much for this.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-799">
				<div id="div-comment-799" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/30f861eb0775bfb4039bd58e0952417d" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://www.facebook.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;www.facebook.com&#39;]);" rel="external nofollow" class="url">Roxie</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-799">
			January 29, 2012 at 4:26 pm</a>		</div>

		<p>I just hope whoever writes these keeps wrtinig more!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-188">
				<div id="div-comment-188" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/969bede09c700f1f1623f840c61c11ac" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">prasad</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-188">
			February 15, 2011 at 7:25 am</a>		</div>

		<p>hi</p>
<p>i have displayed a triangle shape and a rectangle shape here i have mapped a texture on rectangle but the texture also mapping on shape.what is the resolution for this one</p>
<p>check this link for screen shot <a href="http://www.freeimagehosting.net/uploads/82fe919770.png" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-comment&#39;,&#39;www.freeimagehosting.net&#39;]);" rel="nofollow">http://www.freeimagehosting.net/uploads/82fe919770.png</a></p>
<p>please any one can resolve my problem.if u resolve please send replay to <a href="mailto:ensisinfo42@gmail.com">ensisinfo42@gmail.com</a>..</p>
<p>plzzzzzzzzzzzzzzzz</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-tamas bypostauthor even depth-2" id="comment-194">
				<div id="div-comment-194" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ad13be881d13f361a39c3ce74e5a8df8" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Impaler</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-194">
			February 16, 2011 at 6:32 pm</a>		</div>

		<p>Could you share some code with us so we can have a look?</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-186">
				<div id="div-comment-186" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/0081c490e3a1932c185eba291acd889a" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">ShaunK</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-186">
			February 12, 2011 at 6:28 pm</a>		</div>

		<p>Just wanted to say that you have saved me hours of trial and error with this post. Much appreciated!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1 parent" id="comment-178">
				<div id="div-comment-178" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ddfc60f6e56bdce48a79153e84d7a0ea" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">vinaykumarmp</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-178">
			February 8, 2011 at 7:42 am</a>		</div>

		<p>Hi,</p>
<p>   I am able to get texture mapping on emulator but failed on the actual device (tried on droid x and samsung tab).</p>
<p>Even i have create new drawable folder in the res_dir.</p>
<p>Please help on this.<br>
Can also send a reply to my mail id : <a href="mailto:mp.vinaykumar@gmail.com">mp.vinaykumar@gmail.com</a></p>
<p>Thks,<br>
Vinay</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-tamas bypostauthor odd alt depth-2 parent" id="comment-179">
				<div id="div-comment-179" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ad13be881d13f361a39c3ce74e5a8df8" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Impaler</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-179">
			February 8, 2011 at 12:21 pm</a>		</div>

		<p>Did you make sure that the size (width and height) of the image is a power of 2? The height must not be equal with the width. It can be something like 64×128 for example.<br>
As Antonio pointed it out earlier, this might be the case.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3" id="comment-12665">
				<div id="div-comment-12665" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/e2a963595df816da93c9aad07fb32502" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Jonatas</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-12665">
			September 6, 2013 at 2:40 am</a>		</div>

		<p>Why te width cannot be equal to the height?<br>
I’m reading a DICOM image, 512×512, and only show a white square.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-177">
				<div id="div-comment-177" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/e3404a4726b33e38f0c34d4bdc8245fd" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://thegeekypranksters.blogspot.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;thegeekypranksters.blogspot.com&#39;]);" rel="external nofollow" class="url">emolaus</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-177">
			February 7, 2011 at 9:49 pm</a>		</div>

		<p>Thank you so much for a great introduction! OpenGL is a jungle and this was just perfect. Cheers!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1 parent" id="comment-172">
				<div id="div-comment-172" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/9f191ef0b6b344dc3367cf1a62d6af68" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Antonio</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-172">
			February 6, 2011 at 2:29 pm</a>		</div>

		<p>First of all, thank you very much. One of the nicest posts about this on the net. Regarding the sample project, it showed up a only white square. Then I realized that my handset (Milestone 2, Android2.2) requires textures of width/height that match 2^n. The sample image you provided is 310×310. After resizing it to 64×64, for example, it worked perfectly.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-tamas bypostauthor odd alt depth-2" id="comment-173">
				<div id="div-comment-173" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/ad13be881d13f361a39c3ce74e5a8df8" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Impaler</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-173">
			February 6, 2011 at 5:00 pm</a>		</div>

		<p>I have mentioned this in the article yet I have not adhered to this rule.<br>
I have changed the texture size to 256×256.</p>
<p>Thanks for pointing it out!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-165">
				<div id="div-comment-165" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/88b9ffb1a0fa01453e0c007b9c528500" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">vlk</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-165">
			January 31, 2011 at 5:43 pm</a>		</div>

		<p>Hi, nice tutorial, but if I run this app on nexus one, I see only white square. where is the problem?<br>
thanks.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2 parent" id="comment-166">
				<div id="div-comment-166" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/9222b70f720eee25984b7448daa1d2df" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">semajhan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-166">
			January 31, 2011 at 5:55 pm</a>		</div>

		<p>Go to your res -&gt; drawable and create a new folder named drawable-nodpi and put the images in there.</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3" id="comment-168">
				<div id="div-comment-168" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/88b9ffb1a0fa01453e0c007b9c528500" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">vlk</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-168">
			February 1, 2011 at 6:48 pm</a>		</div>

		<p>nice, thanks <img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/icon_smile.gif" alt=":-)" class="wp-smiley"> </p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt depth-3" id="comment-169">
				<div id="div-comment-169" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/88b9ffb1a0fa01453e0c007b9c528500" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">vlk</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-169">
			February 1, 2011 at 6:49 pm</a>		</div>

		<p>nice, here was the problem, thanks <img src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/icon_smile.gif" alt=":-)" class="wp-smiley"> </p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 parent" id="comment-163">
				<div id="div-comment-163" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/cb1c57c9b52206dd69aaf26c3b7e2ad9" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn"><a href="http://www.designsaga.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;www.designsaga.com&#39;]);" rel="external nofollow" class="url">Elliott</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-163">
			January 27, 2011 at 11:25 pm</a>		</div>

		<p>oh ho ho, very very nice.  been waiting for this!</p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-1035">
				<div id="div-comment-1035" class="comment-body">
				<div class="comment-author vcard">
		<img alt="" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/a8754269c06e01158cab1d78459e1f35" class="avatar avatar-32 photo" height="32" width="32">		<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/comment-page-1/#comment-1035">
			May 4, 2012 at 12:47 pm</a>		</div>

		<p>I really liked your example!<br>
Could you modify it to output to the stream on the screen background and the numerous PNG sprites of arbitrary size and position on the screen.</p>
<p>Sprites should not change its size. ie For example sprite size 30×20 pixels to display the position x = 100 y = 50</p>
<p>Ideally, theif not difficult to modify this project:<br>
<a href="http://depositfiles.com/files/7moz1gzl2" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-comment&#39;,&#39;depositfiles.com&#39;]);" rel="nofollow">http://depositfiles.com/files/7moz1gzl2</a></p>

		<div class="reply">
		<a rel="nofollow" class="comment-reply-login" href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">Log in to Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
	</ol>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
		<div class="clear"></div>
	</div>
 


<div id="respond">

<h4>Leave a Reply</h4>

<div class="cancel-comment-reply">
	<small><a rel="nofollow" id="cancel-comment-reply-link" href="http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/#respond" style="display:none;">Click here to cancel reply.</a></small>
</div>

<p>You must be <a href="http://obviam.net/wp-login.php?redirect_to=http%3A%2F%2Fobviam.net%2Findex.php%2Ftexture-mapping-opengl-android-displaying-images-using-opengl-and-squares%2F">logged in</a> to post a comment.</p>
</div>

</div><!-- end main-content -->

<div id="sidebar">
		<div class="widget">		<h4>Recent Posts</h4>		<ul>
					<li>
				<a href="http://obviam.net/index.php/game-ai-an-introduction-to-behavior-trees/" title="Game AI – An Introduction to Behaviour Trees">Game AI – An Introduction to Behaviour Trees</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/hiatus-the-end/" title="Hiatus – The End?">Hiatus – The End?</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/getting-started-in-android-game-development-with-libgdx-tutorial-part-4-collision-detection/" title="Getting Started in Android Game Development with libgdx – Tutorial Part 4 – Collision Detection">Getting Started in Android Game Development with libgdx – Tutorial Part 4 – Collision Detection</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/getting-started-in-android-game-development-with-libgdx-tutorial-part-3-jumping-gravity-and-movement/" title="Getting Started in Android Game Development with libgdx – Tutorial Part 3 – Jumping, Gravity and improved movement">Getting Started in Android Game Development with libgdx – Tutorial Part 3 – Jumping, Gravity and improved movement</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/getting-started-in-android-game-development-with-libgdx-tutorial-part-2-animation/" title="Getting Started in Android Game Development with libgdx – Tutorial Part 2 – Animation">Getting Started in Android Game Development with libgdx – Tutorial Part 2 – Animation</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/update/" title="Update">Update</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/getting-started-in-android-game-development-with-libgdx-create-a-working-prototype-in-a-day-tutorial-part-1/" title="Getting Started in Android Game Development with libgdx – Create a Working Prototype in a Day – Tutorial Part 1">Getting Started in Android Game Development with libgdx – Create a Working Prototype in a Day – Tutorial Part 1</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/the-mvc-pattern-tutorial-building-games/" title="Building Games Using the MVC Pattern – Tutorial and Introduction">Building Games Using the MVC Pattern – Tutorial and Introduction</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/3d-programming-with-android-projections-perspective/" title="Introduction to 3D Programming with Android – Perspective Projections">Introduction to 3D Programming with Android – Perspective Projections</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/design-in-game-entities-object-composition-strategies-part-2-the-state-pattern/" title="Design In-game Entities. Object Composition Strategies. Part 2 – The State Pattern">Design In-game Entities. Object Composition Strategies. Part 2 – The State Pattern</a>
						</li>
					<li>
				<a href="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development.htm" title="Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)">Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/opengl-es-android-displaying-graphical-elements-primitives/" title="OpenGL ES Android – Displaying Graphical Elements (Primitives)">OpenGL ES Android – Displaying Graphical Elements (Primitives)</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/opengl-es-with-android-switching-from-canvas-to-opengl/" title="OpenGL ES with Android Tutorial- Switching from Canvas to OpenGL">OpenGL ES with Android Tutorial- Switching from Canvas to OpenGL</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/using-bitmap-fonts-in-android/" title="Using Bitmap Fonts in Android">Using Bitmap Fonts in Android</a>
						</li>
					<li>
				<a href="http://obviam.net/index.php/design-in-game-entities-object-composition-strategies-part-1/" title="Design In-game Entities. Object Composition Strategies. Part 1 – The Strategy Pattern">Design In-game Entities. Object Composition Strategies. Part 1 – The Strategy Pattern</a>
						</li>
				</ul>
		</div><div class="widget"><h4>Tags</h4><div class="tagcloud"><a href="http://obviam.net/index.php/tag/2d/" class="tag-link-20" title="4 topics" style="font-size: 15.567567567568pt;">2D</a>
<a href="http://obviam.net/index.php/tag/3d/" class="tag-link-11" title="2 topics" style="font-size: 11.405405405405pt;">3D</a>
<a href="http://obviam.net/index.php/tag/ai/" class="tag-link-39" title="1 topic" style="font-size: 8pt;">AI</a>
<a href="http://obviam.net/index.php/tag/android-2/" class="tag-link-14" title="10 topics" style="font-size: 22pt;">android</a>
<a href="http://obviam.net/index.php/tag/animation-2/" class="tag-link-21" title="1 topic" style="font-size: 8pt;">animation</a>
<a href="http://obviam.net/index.php/tag/application-life-cycle/" class="tag-link-17" title="1 topic" style="font-size: 8pt;">application life cycle</a>
<a href="http://obviam.net/index.php/tag/best-practices/" class="tag-link-26" title="2 topics" style="font-size: 11.405405405405pt;">Best Practices</a>
<a href="http://obviam.net/index.php/tag/collision-detection/" class="tag-link-38" title="1 topic" style="font-size: 8pt;">Collision detection</a>
<a href="http://obviam.net/index.php/tag/design-patterns/" class="tag-link-29" title="2 topics" style="font-size: 11.405405405405pt;">Design Patterns</a>
<a href="http://obviam.net/index.php/tag/effects-2/" class="tag-link-25" title="1 topic" style="font-size: 8pt;">effects</a>
<a href="http://obviam.net/index.php/tag/fonts/" class="tag-link-30" title="1 topic" style="font-size: 8pt;">fonts</a>
<a href="http://obviam.net/index.php/tag/fps/" class="tag-link-19" title="2 topics" style="font-size: 11.405405405405pt;">FPS</a>
<a href="http://obviam.net/index.php/tag/game-architecture/" class="tag-link-15" title="2 topics" style="font-size: 11.405405405405pt;">game architecture</a>
<a href="http://obviam.net/index.php/tag/game-design/" class="tag-link-27" title="3 topics" style="font-size: 13.675675675676pt;">Game Design</a>
<a href="http://obviam.net/index.php/tag/game-deve/" class="tag-link-36" title="1 topic" style="font-size: 8pt;">game deve</a>
<a href="http://obviam.net/index.php/tag/game-development-2/" class="tag-link-13" title="4 topics" style="font-size: 15.567567567568pt;">Game development</a>
<a href="http://obviam.net/index.php/tag/game-loop/" class="tag-link-16" title="4 topics" style="font-size: 15.567567567568pt;">game loop</a>
<a href="http://obviam.net/index.php/tag/graphics-2/" class="tag-link-18" title="9 topics" style="font-size: 21.243243243243pt;">graphics</a>
<a href="http://obviam.net/index.php/tag/java/" class="tag-link-5" title="4 topics" style="font-size: 15.567567567568pt;">Java</a>
<a href="http://obviam.net/index.php/tag/libgdx/" class="tag-link-33" title="3 topics" style="font-size: 13.675675675676pt;">libgdx</a>
<a href="http://obviam.net/index.php/tag/misc/" class="tag-link-35" title="1 topic" style="font-size: 8pt;">Misc</a>
<a href="http://obviam.net/index.php/tag/motivation/" class="tag-link-3" title="1 topic" style="font-size: 8pt;">Motivation</a>
<a href="http://obviam.net/index.php/tag/opengl-2/" class="tag-link-32" title="5 topics" style="font-size: 17.081081081081pt;">opengl</a>
<a href="http://obviam.net/index.php/tag/particles/" class="tag-link-24" title="1 topic" style="font-size: 8pt;">particles</a>
<a href="http://obviam.net/index.php/tag/physics/" class="tag-link-37" title="1 topic" style="font-size: 8pt;">physics</a>
<a href="http://obviam.net/index.php/tag/sprite/" class="tag-link-22" title="1 topic" style="font-size: 8pt;">sprite</a>
<a href="http://obviam.net/index.php/tag/strategy-pattern/" class="tag-link-28" title="1 topic" style="font-size: 8pt;">Strategy Pattern</a>
<a href="http://obviam.net/index.php/tag/tutorial/" class="tag-link-34" title="1 topic" style="font-size: 8pt;">tutorial</a></div>
</div><div class="widget"><h4>Categories</h4>		<ul>
	<li class="cat-item cat-item-20"><a href="http://obviam.net/index.php/category/2d/" title="View all posts filed under 2D">2D</a>
</li>
	<li class="cat-item cat-item-11"><a href="http://obviam.net/index.php/category/3d/" title="3D graphics and theory">3D</a>
</li>
	<li class="cat-item cat-item-39"><a href="http://obviam.net/index.php/category/ai/" title="View all posts filed under AI">AI</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://obviam.net/index.php/category/android/" title="Android stuff">Android</a>
</li>
	<li class="cat-item cat-item-10"><a href="http://obviam.net/index.php/category/animation/" title="Animation stuff">Animation</a>
</li>
	<li class="cat-item cat-item-26"><a href="http://obviam.net/index.php/category/java/best-practices/" title="View all posts filed under Best Practices">Best Practices</a>
</li>
	<li class="cat-item cat-item-29"><a href="http://obviam.net/index.php/category/design-patterns/" title="View all posts filed under Design Patterns">Design Patterns</a>
</li>
	<li class="cat-item cat-item-23"><a href="http://obviam.net/index.php/category/effects/" title="View all posts filed under Effects">Effects</a>
</li>
	<li class="cat-item cat-item-27"><a href="http://obviam.net/index.php/category/game-design/" title="View all posts filed under Game Design">Game Design</a>
</li>
	<li class="cat-item cat-item-4"><a href="http://obviam.net/index.php/category/game-development/" title="General game development">Game Development</a>
</li>
	<li class="cat-item cat-item-12"><a href="http://obviam.net/index.php/category/gameloop/" title="Gameloop">Gameloop</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://obviam.net/index.php/category/graphics/" title="Anything having to do with graphics">Graphics</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://obviam.net/index.php/category/java/" title="Regarding the Java language">Java</a>
</li>
	<li class="cat-item cat-item-33"><a href="http://obviam.net/index.php/category/libgdx/" title="View all posts filed under libgdx">libgdx</a>
</li>
	<li class="cat-item cat-item-35"><a href="http://obviam.net/index.php/category/misc/" title="View all posts filed under Misc">Misc</a>
</li>
	<li class="cat-item cat-item-3"><a href="http://obviam.net/index.php/category/motivation/" title="Why game development is cool and why should we do it?">Motivation</a>
</li>
	<li class="cat-item cat-item-31"><a href="http://obviam.net/index.php/category/opengl/" title="View all posts filed under OpenGL">OpenGL</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://obviam.net/index.php/category/sound/" title="Anything having to do with sound">Sound</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://obviam.net/index.php/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
		</ul>
</div></div><!-- end sidebar -->
<div class="clear"></div>

<div id="footer">
<div id="foot-1">

</div><!-- end foot-1 -->

<div id="foot-right">
<div id="foot-2">

</div><!-- end foot-2 -->

<div id="foot-3">
</div><!-- end foot-3 -->
<div class="clear"></div>
</div><!-- end foot-right -->
<div class="clear"></div>
</div><!-- end footer -->

<div id="footer-credit">
Copyright © - 2014 <b><a href="http://obviam.net/">Against the Grain - Obviam MMX - MMXII</a></b>. <a href="http://obviam.net/index.php/feed/">Entries (RSS)</a>.
<div id="footer-desc">Sharing game making with the masses since 2010</div>
</div><!-- end footer-credit -->

</div><!-- end div #container -->
</div><!-- end div #wrapper -->

<!--
	Clean Simple White (CSW) Theme for WordPress
	Designed by Mazznoer
	website : http://mazznoer.web.id/
-->


<script type="text/javascript"><!--
wpa2a.targets=[
{title:'Texture Mapping &#8211; OpenGL Android (Displaying Images using OpenGL and Squares)',url:'http://obviam.net/index.php/texture-mapping-opengl-android-displaying-images-using-opengl-and-squares/'}];
wpa2a.html_done=true;if(wpa2a.script_ready&&!wpa2a.done)wpa2a.init();wpa2a.script_load();
//--></script>

<!-- Woopra Analytics Code -->
<script type="text/javascript">
(function(){
var wsc=document.createElement('script');
wsc.type='text/javascript';
wsc.src=document.location.protocol+'//static.woopra.com/js/woopra.js';
wsc.async=true;
var ssc = document.getElementsByTagName('script')[0];
ssc.parentNode.insertBefore(wsc, ssc);})();
</script>
<!-- End of Woopra Analytics Code -->

<script type="text/javascript" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/shCore.js"></script><div style="position: static;"><div class="a2a_overlay" id="a2apage_overlay"></div><div class="a2a_menu a2a_full" id="a2apage_full"><div class="a2a_full_header"><div id="a2apage_find_container" class="a2a_menu_find_container"><input id="a2apage_find" class="a2a_menu_find" type="text" onclick="a2a.focus_find()" onkeyup="a2a.do_find()" autocomplete="off" title="Find any service"><span id="a2apage_find_icon" class="a2a_i_find" onclick="a2a.focus_find()"><svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="16px" height="16px" viewBox="8 8 16 16"><path fill="#0166FF" d="M21.636,20.553l-3.291-3.291c0.536-0.753,0.858-1.667,0.858-2.661c0-2.542-2.061-4.602-4.602-4.602C12.06,9.999,10,12.059,10,14.601c0,2.541,2.06,4.602,4.602,4.602c0.994,0,1.907-0.32,2.659-0.856l3.291,3.29c0.401,0.402,0.968,0.486,1.268,0.184C22.119,21.521,22.036,20.953,21.636,20.553z M14.602,17.9c-1.823,0-3.3-1.477-3.3-3.3s1.477-3.3,3.3-3.3s3.3,1.477,3.3,3.3S16.424,17.9,14.602,17.9z"></path></svg></span></div></div><div class="a2a_full_services" id="a2apage_full_services"><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_facebook">Facebook</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_twitter">Twitter</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_google_plus">Google+</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_pinterest">Pinterest</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_linkedin">LinkedIn</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_email">Email</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_stumbleupon">StumbleUpon</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_reddit">Reddit</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_wordpress">WordPress</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_tumblr">Tumblr</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_delicious">Delicious</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_digg">Digg</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_google">Google Bookmarks</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_yahoo">Yahoo Bookmarks</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_whatsapp">WhatsApp</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_evernote">Evernote</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_line">Line</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_wanelo">Wanelo</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_app_net">App.net</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_buffer">Buffer</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_xing">XING</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_bebo">Bebo</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_orkut">Orkut</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_mixi">Mixi</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_vk">VK</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_pocket">Pocket</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_gmail">Google Gmail</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_mendeley">Mendeley</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_yahoo">Yahoo Mail</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_pinboard">Pinboard</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_outlook_com">Outlook.com</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_box">Box.net</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_aol">AOL Mail</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_instapaper">Instapaper</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_y18">Hacker News</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_springpad">Springpad</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_myspace">MySpace</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_flipboard">Flipboard</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_arto">Arto</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_aim">AIM</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_yim">Yahoo Messenger</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_mail_ru">Mail.Ru</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_plurk">Plurk</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_diaspora">Diaspora</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_fark">Fark</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_blogger">Blogger Post</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_typepad">TypePad Post</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_kindle">Kindle It</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_sina_weibo">Sina Weibo</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_baidu">Baidu</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_netlog">Netlog</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_citeulike">CiteULike</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_jumptags">Jumptags</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_funp">FunP</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_phonefavs">PhoneFavs</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_xerpi">Xerpi</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_netvouz">Netvouz</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_diigo">Diigo</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_bibsonomy">BibSonomy</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_blogmarks">BlogMarks</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_startaid">StartAid</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_khabbr">Khabbr</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_meneame">Meneame</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_yoolink">Yoolink</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_bookmarks_fr">Bookmarks.fr</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_technotizie">Technotizie</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_newsvine">NewsVine</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_friendfeed">FriendFeed</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_protopage">Protopage Bookmarks</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_blinklist">Blinklist</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_webnews">Webnews</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_segnalo">Segnalo</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_pusha">Pusha</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_youmob">YouMob</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_slashdot">Slashdot</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_allvoices">Allvoices</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_jamespot">Jamespot</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_twiddla">Twiddla</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_linkagogo">LinkaGoGo</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_nowpublic">NowPublic</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_livejournal">LiveJournal</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_linkatopia">Linkatopia</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_buddymarks">BuddyMarks</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_viadeo">Viadeo</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_wists">Wists</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_sitejot">SiteJot</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_dzone">DZone</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_care2">Care2 News</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_bitty">Bitty Browser</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_odnoklassniki">Odnoklassniki</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_symbaloo">Symbaloo Feeds</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_folkd">Folkd</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_newstrust">NewsTrust</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_amazon">Amazon Wish List</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_printfriendly">PrintFriendly</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_tuenti">Tuenti</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_rediff">Rediff MyPage</span></a><i class="a2a_i"></i><i class="a2a_i"></i></div><div class="a2a_full_footer"><a href="https://www.addtoany.com/" title="Share Buttons" target="_blank"><span class="a2a_i_a2a_sm">AddToAny</span></a></div></div><div id="a2apage_dropdown" class="a2a_menu a2a_mini" onmouseover="a2a.onMouseOver_stay()" onmouseout="a2a.onMouseOut_delay()" style="display:none"><div id="a2apage_title_container" class="a2a_menu_title_container" style="display:none"><input id="a2apage_title" class="a2a_menu_title"></div><div class="a2a_mini_services" id="a2apage_mini_services"><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_facebook">Facebook</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_twitter">Twitter</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_google_plus">Google+</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_pinterest">Pinterest</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_linkedin">LinkedIn</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_email">Email</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_stumbleupon">StumbleUpon</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_reddit">Reddit</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_wordpress">WordPress</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_tumblr">Tumblr</span></a></div><div id="a2apage_cols_container" class="a2a_cols_container"><div class="a2a_col1" id="a2apage_col1"></div><div id="a2apage_2_col1" style="display:none"><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_gmail">Google Gmail</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_yahoo">Yahoo Mail</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_outlook_com">Outlook.com</span></a><a rel="nofollow" class="a2a_i" href="http://obviam.net/" target="_blank"><span class="a2a_i_aol">AOL Mail</span></a><a rel="nofollow" class="a2a_i a2a_emailer" href="http://obviam.net/" target="_blank" id="a2apage_any_email"><span class="a2a_i_email">Any email</span></a><a rel="nofollow" class="a2a_i a2a_emailer a2a_email_client" href="http://obviam.net/" target="" id="a2apage_email_client"><span class="a2a_i_email">Email app</span></a></div><div class="a2a_clear"></div></div><div class="a2apage_wide a2a_wide"><a href="" id="a2apage_show_more_less" class="a2a_menu_show_more_less a2a_more" onmouseover="img=this.firstChild;if(a2a.c.color_arrow_hover==&#39;fff&#39;){if(img.className.indexOf(&#39;_wt&#39;)==-1)img.className+=&#39;_wt&#39;}else img.className=img.className.replace(/_wt/,&#39;&#39;)" onmouseout="img=this.firstChild;if(a2a.c.color_arrow==&#39;fff&#39;){if(img.className.indexOf(&#39;_wt&#39;)==-1)img.className+=&#39;_wt&#39;}else img.className=img.className.replace(/_wt/,&#39;&#39;)" title="Show all"><span class="a2a_i_a2a">More…</span></a></div></div><div style="height: 1px; width: 1px; position: absolute; z-index: 100000; top: 0px; visibility: hidden;"><iframe id="a2apage_sm_ifr" height="1" width="1" title="AddToAny Utility Frame" transparency="true" allowtransparency="true" frameborder="0" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/sm11.htm" style="height: 1px; width: 1px; border: 0px; left: 0px; top: 0px; position: absolute; z-index: 100000; display: none;"></iframe></div></div>
<script type="text/javascript" src="./Texture Mapping – OpenGL Android (Displaying Images using OpenGL and Squares)   Against the Grain – Game Development_files/shBrushJava.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/styles/shCore.css?ver=2.1.364b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].appendChild(corecss);
		var themecssurl = "http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/styles/shThemeDefault.css?ver=2.1.364b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		document.getElementsByTagName("head")[0].appendChild(themecss);
	})();
	SyntaxHighlighter.config.clipboardSwf = 'http://obviam.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter/scripts/clipboard.swf';
	SyntaxHighlighter.config.strings.expandSource = 'show source';
	SyntaxHighlighter.config.strings.viewSource = 'view source';
	SyntaxHighlighter.config.strings.copyToClipboard = 'copy to clipboard';
	SyntaxHighlighter.config.strings.copyToClipboardConfirmation = 'The code is in your clipboard now';
	SyntaxHighlighter.config.strings.print = 'print';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['wrap-lines'] = false;
	SyntaxHighlighter.all();
</script>



</body></html>