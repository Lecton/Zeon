/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.clientGUI.contacts;

import client.Colleague;
import utils.Log;
import utils.MessageFactory;
import Utils.MessageUtils;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

/**
 *
 * @author Bernhard
 */
public class ContactProfile extends javax.swing.JPanel {
    private Colleague owner;
    private boolean selected =false;
    private ContactList parent;
    
    private boolean acceptedVideo =false;
    private boolean acceptedAudio =false;
    private boolean acceptedStream =false;
    
    private String videoStreamID;
    private String audioStreamID;
    private String streamStreamID;
    
    private boolean inAudio =false;
    private boolean inVideo =false;
    private boolean inStream =false;
    
    private ContactPopupMenu cpm;

    /**
     * Creates new form ContactProfile
     */
    public ContactProfile() {
        initComponents();
        
        cpm =new ContactPopupMenu(this);
        this.add(cpm);
    }
    
    public void setColleague(Colleague owner) {
        this.owner =owner;
        lblName.setText(owner.getUsername());
        lblEmail.setText(owner.getEmail());
        lblID.setText(""+owner.getUserID());
        
        lblAvatar.setImage(owner.getAvatar(),true);
    }
    
    public void setContactList(ContactList list) {
        this.parent =list;
    }
    
    public int getUserID() {
        return owner.getUserID();
    }
    
    public String getUsername() {
        return owner.getUsername();
    }
    
    public void setUsername(String username) {
        owner.setUsername(username);
    }
    
    public void updateAvatar(String image) {
        lblAvatar.setImage(image, true);
    }

    public ContactList getParent() {
        return parent;
    }
    
    public void addMessage(Messages.StringMessage sm) {
        owner.addMessage(sm);
    }
    
    public ArrayList<Messages.StringMessage> getMessageHistory() {
        return owner.getMessageHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        videoBtn = new userInterface.clientGUI.Button();
        audioBtn = new userInterface.clientGUI.Button();
        lblEmail = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblAvatar = new userInterface.clientGUI.ImageContainer();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        lblName.setText("Name");

        videoBtn.setBackground(new java.awt.Color(255, 255, 255));
        videoBtn.setBorder(null);
        videoBtn.setForeground(new java.awt.Color(255, 255, 255));
        videoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unclicked-camera.png"))); // NOI18N
        videoBtn.setBorderPainted(false);
        videoBtn.setContentAreaFilled(false);
        videoBtn.setEnabled(false);
        videoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                videoBtnActionPerformed(evt);
            }
        });
        videoBtn.setUnclicked(new javax.swing.ImageIcon(getClass().getResource("/unclicked-camera.png")));
        videoBtn.setClicked(new javax.swing.ImageIcon(getClass().getResource("/clicked-camera.png")));

        audioBtn.setBackground(new java.awt.Color(255, 255, 255));
        audioBtn.setBorder(null);
        audioBtn.setForeground(new java.awt.Color(255, 255, 255));
        audioBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unclicked-microphone.png"))); // NOI18N
        audioBtn.setBorderPainted(false);
        audioBtn.setContentAreaFilled(false);
        audioBtn.setEnabled(false);
        audioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                audioBtnActionPerformed(evt);
            }
        });
        audioBtn.setUnclicked(new javax.swing.ImageIcon(getClass().getResource("/unclicked-microphone.png")));
        audioBtn.setClicked(new javax.swing.ImageIcon(getClass().getResource("/clicked-microphone.png")));

        lblEmail.setText("Email");

        lblAvatar.setMaximumSize(new java.awt.Dimension(62, 62));
        lblAvatar.setMinimumSize(new java.awt.Dimension(62, 62));
        lblAvatar.setName(""); // NOI18N
        lblAvatar.setPreferredSize(new java.awt.Dimension(62, 62));

        javax.swing.GroupLayout lblAvatarLayout = new javax.swing.GroupLayout(lblAvatar);
        lblAvatar.setLayout(lblAvatarLayout);
        lblAvatarLayout.setHorizontalGroup(
            lblAvatarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 62, Short.MAX_VALUE)
        );
        lblAvatarLayout.setVerticalGroup(
            lblAvatarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(audioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(videoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblEmail)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAvatar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lblID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblEmail)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(audioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(videoBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (!selected) {
                parent.select(this);
            } else {
                parent.unselect(this);
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void audioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_audioBtnActionPerformed
        if (!acceptedAudio) {
            parent.getUserInterface().getConnection().writeSafe(
                    MessageFactory.generateStreamResponse(
                            parent.getUserInterface().getUserID(), 
                            audioStreamID, true));
            acceptedAudio =true;
        } else {
            parent.getUserInterface().getConnection().writeSafe(
                    MessageFactory.generateStreamResponse(
                            parent.getUserInterface().getUserID(), 
                            audioStreamID, false));
            acceptedAudio =false;
        }
        audioBtn.togglePressed();
    }//GEN-LAST:event_audioBtnActionPerformed

    private void videoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_videoBtnActionPerformed
        if (!acceptedVideo) {
            parent.getUserInterface().getConnection().writeSafe(
                    MessageFactory.generateStreamResponse(
                            parent.getUserInterface().getUserID(), 
                            videoStreamID, true));
            acceptedVideo =true;
        } else {
            parent.getUserInterface().getConnection().writeSafe(
                    MessageFactory.generateStreamResponse(
                            parent.getUserInterface().getUserID(), 
                            videoStreamID, false));
            acceptedVideo =false;
            parent.getUserInterface().getVideoArea().clear();
        }
        videoBtn.togglePressed();
    }//GEN-LAST:event_videoBtnActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        showPopupMenu(evt);
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        showPopupMenu(evt);
    }//GEN-LAST:event_formMouseReleased
    
    private void showPopupMenu(MouseEvent evt) {
        if (evt.isPopupTrigger()) {
            cpm.show(this, evt.getX(), evt.getY());
        }
    }
    
    protected void select() {
        setBackground(new Color(0, 0, 158));
        setForeground(Color.WHITE);
        selected =true;
        
//        Log.write(this,"Selected Person: "+owner.getUsername()+" - "+owner.getUserID());
    }
    
    protected void unselect() {
        setBackground(Color.WHITE);
        setForeground(Color.BLACK);
        selected =false;
        
//        Log.write(this,"Unselected Person: "+owner.getUsername());
    }
    
    public void setIncoming(boolean incoming, String streamID) {
        
        switch (MessageUtils.getStreamType(streamID)) {
            case AUDIO:
                incomingAudio(incoming, streamID);
                break;
            case VIDEO:
                incomingVideo(incoming, streamID);
                break;
            case MEDIA:
                break;
            default:
                Log.error(this, "Unknown stream type from steamID: "+streamID);
        }
    }
    
    private void incomingVideo(boolean incoming, String streamID) {
        videoStreamID =streamID;
        videoBtn.setEnabled(incoming);
        
        if (!incoming && videoBtn.isPressed()) {
            videoBtn.togglePressed();
            acceptedVideo =false;
        }
    }
    
    private void incomingAudio(boolean incoming, String streamID) {
        audioStreamID =streamID;
        audioBtn.setEnabled(incoming);
        
        if (!incoming && audioBtn.isPressed()) {
            audioBtn.togglePressed();
            acceptedAudio =false;
        }
    }

    protected void setInAudio(boolean inAudio) {
        this.inAudio = inAudio;
    }

    protected void setInVideo(boolean inVideo) {
        this.inVideo = inVideo;
    }

    protected boolean inAudio() {
        return inAudio;
    }

    protected boolean inVideo() {
        return inVideo;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private userInterface.clientGUI.Button audioBtn;
    private userInterface.clientGUI.ImageContainer lblAvatar;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private userInterface.clientGUI.Button videoBtn;
    // End of variables declaration//GEN-END:variables
}