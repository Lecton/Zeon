package Interface.ClientGUI.Contacts;

import Client.Colleague;
import Interface.ClientGUI.GUI;
import Utils.ImageUtils;
import Utils.Log;
import Utils.MessageFactory;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

public class UserProfile extends javax.swing.JPanel {
    private GUI userInterface =null;
    private Colleague user =null;
    private int streamIDCount =0;
    
    private mediaStreaming.Video.VideoStream vStream;
    private mediaStreaming.Audio.AudioStream aStream;
    
    public UserProfile() {
        initComponents();
    }
    
    public void setUserInterface(GUI userInterface) {
        this.userInterface =userInterface;
        vStream =new mediaStreaming.Video.VideoStream(
                new mediaStreaming.Video.ScreenCapture(), 
                userInterface.getConnection());
        aStream =new mediaStreaming.Audio.AudioStream(
                new mediaStreaming.Audio.AudioLine(), 
                userInterface.getConnection());
    }
    
    public void setUser(Colleague user) {
        this.user =user;
        vStream.setStream(new Messages.Media.VideoStream(user.getUserID(), 
                Messages.Message.SERVER, user.getEmail()+"vs"+(streamIDCount++)));
        aStream.setStream(new Messages.Media.AudioStream(user.getUserID(), 
                Messages.Message.SERVER, user.getEmail()+"as"+(streamIDCount++)));
        
        lblName.setText(user.getUsername());
        lblEmail.setText(user.getEmail());
        lblID.setText(""+user.getUserID());
        lblAvatar.setIcon(ImageUtils.resizeConvert(user.getAvatar(), 133, 133));
    }
    
    public int getUserID() {
        return user.getUserID();
    }
    
    public String getUsername() {
        return user.getUsername();
    }
    
    public void addMessage(Messages.StringMessage sm) {
        user.addMessage(sm);
    }
    
    public void formWindowClosing(java.awt.event.WindowEvent evt) {
        if (evt != null) {
            if (videoBtn.isPressed()) {
                vStream.stop();
            }
            if (audioBtn.isPressed()) {

            }
            if (streamBtn.isPressed()) {

            }
        } else {
            Log.error(this, 
                    "Unknown access to formWindowClosing in UserProfile.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAvatar = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        audioBtn = new Interface.ClientGUI.Buttons.AudioButton();
        videoBtn = new Interface.ClientGUI.Buttons.VideoButton();
        streamBtn = new Interface.ClientGUI.Buttons.StreamButton();
        lblID = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(208, 192));
        setMinimumSize(new java.awt.Dimension(208, 192));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(208, 192));
        setRequestFocusEnabled(false);

        lblAvatar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/default_profile.png"))); // NOI18N
        lblAvatar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAvatarMouseClicked(evt);
            }
        });

        lblName.setText("User");
        lblName.setToolTipText("");

        lblEmail.setText("Something");

        audioBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unclicked-microphone.png"))); // NOI18N
        audioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                audioBtnActionPerformed(evt);
            }
        });

        videoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unclicked-camera.png"))); // NOI18N
        videoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                videoBtnActionPerformed(evt);
            }
        });

        streamBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unclicked-stream.png"))); // NOI18N
        streamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streamBtnActionPerformed(evt);
            }
        });

        lblID.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(audioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(videoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(streamBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(9, 9, 9)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblID))
                    .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(videoBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(audioBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streamBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void audioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_audioBtnActionPerformed
        userInterface.getConnection().writeSafe(
                MessageFactory.generateStreamProperty(user.getUserID(), 
                        Messages.Message.SERVER, aStream.getStreamID(), 
                        !audioBtn.isPressed()));
        
        if (!audioBtn.isPressed()) {
            int selectedUID =userInterface.getContactList().getSelectedUserID();
            if (selectedUID >= 0) {
                userInterface.getConnection().writeSafe(
                        MessageFactory.generateStreamUpdate(user.getUserID(), 
                                Messages.Message.SERVER, aStream.getStreamID(),
                                selectedUID, 1));
            }
            
            aStream.start();
        } else {
            aStream.stop();
            aStream.setStream(new Messages.Media.AudioStream(user.getUserID(), 
                    Messages.Message.SERVER, user.getEmail()+"as"+(streamIDCount++)));
        }
//        }
    }//GEN-LAST:event_audioBtnActionPerformed

    private void videoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_videoBtnActionPerformed
        userInterface.getConnection().writeSafe(
                MessageFactory.generateStreamProperty(user.getUserID(), 
                        Messages.Message.SERVER, vStream.getStreamID(), 
                        !videoBtn.isPressed()));
        
        if (!videoBtn.isPressed()) {
            int selectedUID =userInterface.getContactList().getSelectedUserID();
            if (selectedUID >= 0) {
                userInterface.getConnection().writeSafe(
                        MessageFactory.generateStreamUpdate(user.getUserID(), 
                                Messages.Message.SERVER, vStream.getStreamID(),
                                selectedUID, 1));
            }
            
            vStream.start();
        } else {
            vStream.stop();
            vStream.setStream(new Messages.Media.VideoStream(user.getUserID(), 
                    Messages.Message.SERVER, user.getEmail()+"vs"+(streamIDCount++)));
        }
    }//GEN-LAST:event_videoBtnActionPerformed

    private void streamBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streamBtnActionPerformed
//        Colleague selectedColleague =userInterface.getContactPane().getSelectedColleague();
//        if (selectedColleague != null) {
//            if (streamBtn.isPressed()) {
//                selectedColleague.startAudioStream(MessageUtils.intToArray(userInterface.getContactPane().getSelectedID()));
//                selectedColleague.startVideoStream();
//            } else {
//                selectedColleague.stopAudioStream();
//                selectedColleague.stopVideoStream();
//            }
//        }
    }//GEN-LAST:event_streamBtnActionPerformed

    private void lblAvatarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAvatarMouseClicked
        if (evt.getButton() == 3) {
            try {
                JFileChooser chooser =new JFileChooser();
                chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                chooser.setMultiSelectionEnabled(false);
                FileNameExtensionFilter filter =new FileNameExtensionFilter("images", "png", "jpg", "jpeg", "bmp");
                chooser.setFileFilter(filter);
                
                if (chooser.showOpenDialog(null) == 0) {
                    File cf =chooser.getSelectedFile();

                    setAvatar(ImageIO.read(cf));
                }
            } catch (IOException e) {
                System.err.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_lblAvatarMouseClicked
    
    private void setAvatar(BufferedImage image) {
        lblAvatar.setIcon(ImageUtils.resizeConvert(image, 133, 133));
        userInterface.getConnection().writeSafe(
                MessageFactory.generateUpdateAvatar(user.getUserID(), 
                        ImageUtils.encodeToString(image, "png")));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Interface.ClientGUI.Buttons.AudioButton audioBtn;
    private javax.swing.JLabel lblAvatar;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private Interface.ClientGUI.Buttons.StreamButton streamBtn;
    private Interface.ClientGUI.Buttons.VideoButton videoBtn;
    // End of variables declaration//GEN-END:variables
}